{
  "contractName": "TokenHolder",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdate",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"acceptOwnership()\":{\"details\":\"used by a new owner to accept an ownership transfer\"},\"transferOwnership(address)\":{\"details\":\"allows transferring the contract ownership the new owner still needs to accept the transfer can only be called by the contract owner\",\"params\":{\"_newOwner\":\"new contract owner\"}},\"withdrawTokens(address,address,uint256)\":{\"details\":\"withdraws tokens held by the contract and sends them to an account can only be called by the owner\",\"params\":{\"_amount\":\"amount to withdraw\",\"_to\":\"account to receive the new amount\",\"_token\":\"ERC20 token contract address\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/TokenHolder.sol\":\"TokenHolder\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/token/interfaces/IERC20Token.sol\":{\"keccak256\":\"0x465f98ed290fb4f65f2d74e938f47c2fa9f7302e766266d8f9326d4c703d5ce3\",\"urls\":[\"bzzr://9746fbda9ee3a4d1e0ed3c5f5d27ebb93114139ad29ae04f313de057f9d1bc92\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/token/interfaces/INonStandardERC20.sol\":{\"keccak256\":\"0x26596dd8e564493f7e821102865fb382c21bbedd44ebc920c8d63626f1bf19dc\",\"urls\":[\"bzzr://c750029c9ba7521fbe0c1827a4854a4b8db274d4402e00daaa4683a024c44d93\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/Owned.sol\":{\"keccak256\":\"0x420234d13d5a10debece92f5264fe4e548d38e4ddba4bb0fae67f121efb5cfb8\",\"urls\":[\"bzzr://6a0a7136d5633bc5e94e7b5f7fd84df2949ec87061ef16d4cb5ec869ebc6de3d\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/TokenHolder.sol\":{\"keccak256\":\"0xea5c8f330999bb5e7360127d38d5a1ce4b1a4b85392c28da43b8c2238884b3c0\",\"urls\":[\"bzzr://6415cecbff420d0f0e0568b73f182000c0bc3d0c1b48930bc84392d1b6c29e03\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/Utils.sol\":{\"keccak256\":\"0x4aaa2acf58cbeaed5f484bdca75daf7caacde07d62ca44b97f020381fc8801e3\",\"urls\":[\"bzzr://feed4fa84f6d4ea9f8e2520e8748cc4e7f8cf2104c8dcdff086db6129fba6f10\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/interfaces/IOwned.sol\":{\"keccak256\":\"0x3bfadfd06a9f37a8687474694252513f00d84ff9074c9d3c69c311d62686e588\",\"urls\":[\"bzzr://b168ba3d91c3119b53b54679bec05592fe124e42f2345e785a4fd08c8225b39e\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/interfaces/ITokenHolder.sol\":{\"keccak256\":\"0x894a791236cbfdc5fd00d2d48f5be0b988d98804b89d9ce3f3c3c90477d590a1\",\"urls\":[\"bzzr://30f405a05448cc0f2efa99e3fc61ff424a8b6c1cee5c2ad05b5542fe41b58b39\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060008054600160a060020a03191633179055610342806100326000396000f30060806040526004361061006c5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416635e35359e811461007157806379ba50971461009d5780638da5cb5b146100b2578063d4ee1d90146100e3578063f2fde38b146100f8575b600080fd5b34801561007d57600080fd5b5061009b600160a060020a0360043581169060243516604435610119565b005b3480156100a957600080fd5b5061009b61020f565b3480156100be57600080fd5b506100c7610297565b60408051600160a060020a039092168252519081900360200190f35b3480156100ef57600080fd5b506100c76102a6565b34801561010457600080fd5b5061009b600160a060020a03600435166102b5565b600054600160a060020a0316331461013057600080fd5b82600160a060020a038116151561014657600080fd5b82600160a060020a038116151561015c57600080fd5b83600160a060020a03811630141561017357600080fd5b85600160a060020a031663a9059cbb86866040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b1580156101ef57600080fd5b505af1158015610203573d6000803e3d6000fd5b50505050505050505050565b600154600160a060020a0316331461022657600080fd5b60015460008054604051600160a060020a0393841693909116917f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a91a3600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600054600160a060020a031681565b600154600160a060020a031681565b600054600160a060020a031633146102cc57600080fd5b600054600160a060020a03828116911614156102e757600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a723058203fb59a107ced07f51bd72878a0b4f4e7f8f3fe20f1c2c1962c09bf1b7add50b50029",
  "deployedBytecode": "0x60806040526004361061006c5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416635e35359e811461007157806379ba50971461009d5780638da5cb5b146100b2578063d4ee1d90146100e3578063f2fde38b146100f8575b600080fd5b34801561007d57600080fd5b5061009b600160a060020a0360043581169060243516604435610119565b005b3480156100a957600080fd5b5061009b61020f565b3480156100be57600080fd5b506100c7610297565b60408051600160a060020a039092168252519081900360200190f35b3480156100ef57600080fd5b506100c76102a6565b34801561010457600080fd5b5061009b600160a060020a03600435166102b5565b600054600160a060020a0316331461013057600080fd5b82600160a060020a038116151561014657600080fd5b82600160a060020a038116151561015c57600080fd5b83600160a060020a03811630141561017357600080fd5b85600160a060020a031663a9059cbb86866040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b1580156101ef57600080fd5b505af1158015610203573d6000803e3d6000fd5b50505050505050505050565b600154600160a060020a0316331461022657600080fd5b60015460008054604051600160a060020a0393841693909116917f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a91a3600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600054600160a060020a031681565b600154600160a060020a031681565b600054600160a060020a031633146102cc57600080fd5b600054600160a060020a03828116911614156102e757600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a723058203fb59a107ced07f51bd72878a0b4f4e7f8f3fe20f1c2c1962c09bf1b7add50b50029",
  "sourceMap": "761:675:47:-;;;858:28;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;361:5:45;:18;;-1:-1:-1;;;;;;361:18:45;369:10;361:18;;;761:675:47;;;;;;",
  "deployedSourceMap": "761:675:47:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1182:252;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1182:252:47;-1:-1:-1;;;;;1182:252:47;;;;;;;;;;;;;;963:182:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;963:182:45;;;;155:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;155:20:45;;;;;;;;-1:-1:-1;;;;;155:20:45;;;;;;;;;;;;;;181:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;181:23:45;;;;740:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;740:137:45;-1:-1:-1;;;;;740:137:45;;;;;1182:252:47;485:5:45;;-1:-1:-1;;;;;485:5:45;471:10;:19;463:28;;;;;;1310:6:47;-1:-1:-1;;;;;432:22:48;;;;424:31;;;;;;1339:3:47;-1:-1:-1;;;;;432:22:48;;;;424:31;;;;;;1360:3:47;-1:-1:-1;;;;;605:25:48;;625:4;605:25;;597:34;;;;;;1397:6:47;-1:-1:-1;;;;;1379:34:47;;1414:3;1419:7;1379:48;;;;;;;;;;;;;-1:-1:-1;;;;;1379:48:47;-1:-1:-1;;;;;1379:48:47;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1379:48:47;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1379:48:47;;;;465:1:48;;501::45;1182:252:47;;;:::o;963:182:45:-;1029:8;;-1:-1:-1;;;;;1029:8:45;1015:10;:22;1007:31;;;;;;1072:8;;;1065:5;;1053:28;;-1:-1:-1;;;;;1072:8:45;;;;1065:5;;;;1053:28;;;1099:8;;;;1091:16;;-1:-1:-1;;1091:16:45;;;-1:-1:-1;;;;;1099:8:45;;1091:16;;;;1117:21;;;963:182::o;155:20::-;;;-1:-1:-1;;;;;155:20:45;;:::o;181:23::-;;;-1:-1:-1;;;;;181:23:45;;:::o;740:137::-;485:5;;-1:-1:-1;;;;;485:5:45;471:10;:19;463:28;;;;;;834:5;;-1:-1:-1;;;;;821:18:45;;;834:5;;821:18;;813:27;;;;;;850:8;:20;;-1:-1:-1;;850:20:45;-1:-1:-1;;;;;850:20:45;;;;;;;;;;740:137::o",
  "source": "pragma solidity ^0.4.24;\nimport './Owned.sol';\nimport './Utils.sol';\nimport './interfaces/ITokenHolder.sol';\nimport '../token/interfaces/INonStandardERC20.sol';\nimport '../token/interfaces/IERC20Token.sol';\n\n/*\n    We consider every contract to be a 'token holder' since it's currently not possible\n    for a contract to deny receiving tokens.\n\n    The TokenHolder's contract sole purpose is to provide a safety mechanism that allows\n    the owner to send tokens that were sent to the contract by mistake back to their sender.\n\n    Note that we use the non standard ERC-20 interface which has no return value for transfer\n    in order to support both non standard as well as standard token contracts.\n    see https://github.com/ethereum/solidity/issues/4116\n*/\ncontract TokenHolder is ITokenHolder, Owned, Utils {\n    /**\n        @dev constructor\n    */\n    constructor() public {\n    }\n\n    /**\n        @dev withdraws tokens held by the contract and sends them to an account\n        can only be called by the owner\n\n        @param _token   ERC20 token contract address\n        @param _to      account to receive the new amount\n        @param _amount  amount to withdraw\n    */\n    function withdrawTokens(IERC20Token _token, address _to, uint256 _amount)\n        public\n        ownerOnly\n        validAddress(_token)\n        validAddress(_to)\n        notThis(_to)\n    {\n        INonStandardERC20(_token).transfer(_to, _amount);\n    }\n}\n",
  "sourcePath": "/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/TokenHolder.sol",
  "ast": {
    "absolutePath": "/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/TokenHolder.sol",
    "exportedSymbols": {
      "TokenHolder": [11959]
    },
    "id": 11960,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11914,
        "literals": ["solidity", "^", "0.4", ".24"],
        "nodeType": "PragmaDirective",
        "src": "0:24:47"
      },
      {
        "absolutePath": "/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/Owned.sol",
        "file": "./Owned.sol",
        "id": 11915,
        "nodeType": "ImportDirective",
        "scope": 11960,
        "sourceUnit": 11810,
        "src": "25:21:47",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/Utils.sol",
        "file": "./Utils.sol",
        "id": 11916,
        "nodeType": "ImportDirective",
        "scope": 11960,
        "sourceUnit": 12007,
        "src": "47:21:47",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/interfaces/ITokenHolder.sol",
        "file": "./interfaces/ITokenHolder.sol",
        "id": 11917,
        "nodeType": "ImportDirective",
        "scope": 11960,
        "sourceUnit": 12225,
        "src": "69:39:47",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/token/interfaces/INonStandardERC20.sol",
        "file": "../token/interfaces/INonStandardERC20.sol",
        "id": 11918,
        "nodeType": "ImportDirective",
        "scope": 11960,
        "sourceUnit": 11183,
        "src": "109:51:47",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/token/interfaces/IERC20Token.sol",
        "file": "../token/interfaces/IERC20Token.sol",
        "id": 11919,
        "nodeType": "ImportDirective",
        "scope": 11960,
        "sourceUnit": 11085,
        "src": "161:45:47",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11920,
              "name": "ITokenHolder",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12224,
              "src": "785:12:47",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ITokenHolder_$12224",
                "typeString": "contract ITokenHolder"
              }
            },
            "id": 11921,
            "nodeType": "InheritanceSpecifier",
            "src": "785:12:47"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11922,
              "name": "Owned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11809,
              "src": "799:5:47",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Owned_$11809",
                "typeString": "contract Owned"
              }
            },
            "id": 11923,
            "nodeType": "InheritanceSpecifier",
            "src": "799:5:47"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11924,
              "name": "Utils",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12006,
              "src": "806:5:47",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Utils_$12006",
                "typeString": "contract Utils"
              }
            },
            "id": 11925,
            "nodeType": "InheritanceSpecifier",
            "src": "806:5:47"
          }
        ],
        "contractDependencies": [11809, 12006, 12208, 12224],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11959,
        "linearizedBaseContracts": [11959, 12006, 11809, 12224, 12208],
        "name": "TokenHolder",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 11928,
              "nodeType": "Block",
              "src": "879:7:47",
              "statements": []
            },
            "documentation": "@dev constructor",
            "id": 11929,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "869:2:47"
            },
            "payable": false,
            "returnParameters": {
              "id": 11927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "879:0:47"
            },
            "scope": 11959,
            "src": "858:28:47",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11957,
              "nodeType": "Block",
              "src": "1369:65:47",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11953,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11933,
                        "src": "1414:3:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11954,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11935,
                        "src": "1419:7:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11950,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11931,
                            "src": "1397:6:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Token_$11084",
                              "typeString": "contract IERC20Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Token_$11084",
                              "typeString": "contract IERC20Token"
                            }
                          ],
                          "id": 11949,
                          "name": "INonStandardERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11182,
                          "src": "1379:17:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_INonStandardERC20_$11182_$",
                            "typeString": "type(contract INonStandardERC20)"
                          }
                        },
                        "id": 11951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1379:25:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INonStandardERC20_$11182",
                          "typeString": "contract INonStandardERC20"
                        }
                      },
                      "id": 11952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11165,
                      "src": "1379:34:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 11955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1379:48:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11956,
                  "nodeType": "ExpressionStatement",
                  "src": "1379:48:47"
                }
              ]
            },
            "documentation": "@dev withdraws tokens held by the contract and sends them to an account\ncan only be called by the owner\n@param _token   ERC20 token contract address\n@param _to      account to receive the new amount\n@param _amount  amount to withdraw",
            "id": 11958,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 11938,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11937,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11764,
                  "src": "1279:9:47",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1279:9:47"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 11940,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11931,
                    "src": "1310:6:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11084",
                      "typeString": "contract IERC20Token"
                    }
                  }
                ],
                "id": 11941,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11939,
                  "name": "validAddress",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11991,
                  "src": "1297:12:47",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1297:20:47"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 11943,
                    "name": "_to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11933,
                    "src": "1339:3:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 11944,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11942,
                  "name": "validAddress",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11991,
                  "src": "1326:12:47",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1326:17:47"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 11946,
                    "name": "_to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11933,
                    "src": "1360:3:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 11947,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11945,
                  "name": "notThis",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 12005,
                  "src": "1352:7:47",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1352:12:47"
              }
            ],
            "name": "withdrawTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11931,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 11958,
                  "src": "1206:18:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$11084",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 11930,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11084,
                    "src": "1206:11:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11084",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11933,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 11958,
                  "src": "1226:11:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11935,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11958,
                  "src": "1239:15:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1239:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1205:50:47"
            },
            "payable": false,
            "returnParameters": {
              "id": 11948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1369:0:47"
            },
            "scope": 11959,
            "src": "1182:252:47",
            "stateMutability": "nonpayable",
            "superFunction": 12223,
            "visibility": "public"
          }
        ],
        "scope": 11960,
        "src": "761:675:47"
      }
    ],
    "src": "0:1437:47"
  },
  "legacyAST": {
    "absolutePath": "/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/TokenHolder.sol",
    "exportedSymbols": {
      "TokenHolder": [11959]
    },
    "id": 11960,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11914,
        "literals": ["solidity", "^", "0.4", ".24"],
        "nodeType": "PragmaDirective",
        "src": "0:24:47"
      },
      {
        "absolutePath": "/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/Owned.sol",
        "file": "./Owned.sol",
        "id": 11915,
        "nodeType": "ImportDirective",
        "scope": 11960,
        "sourceUnit": 11810,
        "src": "25:21:47",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/Utils.sol",
        "file": "./Utils.sol",
        "id": 11916,
        "nodeType": "ImportDirective",
        "scope": 11960,
        "sourceUnit": 12007,
        "src": "47:21:47",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/interfaces/ITokenHolder.sol",
        "file": "./interfaces/ITokenHolder.sol",
        "id": 11917,
        "nodeType": "ImportDirective",
        "scope": 11960,
        "sourceUnit": 12225,
        "src": "69:39:47",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/token/interfaces/INonStandardERC20.sol",
        "file": "../token/interfaces/INonStandardERC20.sol",
        "id": 11918,
        "nodeType": "ImportDirective",
        "scope": 11960,
        "sourceUnit": 11183,
        "src": "109:51:47",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/token/interfaces/IERC20Token.sol",
        "file": "../token/interfaces/IERC20Token.sol",
        "id": 11919,
        "nodeType": "ImportDirective",
        "scope": 11960,
        "sourceUnit": 11085,
        "src": "161:45:47",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11920,
              "name": "ITokenHolder",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12224,
              "src": "785:12:47",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ITokenHolder_$12224",
                "typeString": "contract ITokenHolder"
              }
            },
            "id": 11921,
            "nodeType": "InheritanceSpecifier",
            "src": "785:12:47"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11922,
              "name": "Owned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11809,
              "src": "799:5:47",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Owned_$11809",
                "typeString": "contract Owned"
              }
            },
            "id": 11923,
            "nodeType": "InheritanceSpecifier",
            "src": "799:5:47"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11924,
              "name": "Utils",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12006,
              "src": "806:5:47",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Utils_$12006",
                "typeString": "contract Utils"
              }
            },
            "id": 11925,
            "nodeType": "InheritanceSpecifier",
            "src": "806:5:47"
          }
        ],
        "contractDependencies": [11809, 12006, 12208, 12224],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11959,
        "linearizedBaseContracts": [11959, 12006, 11809, 12224, 12208],
        "name": "TokenHolder",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 11928,
              "nodeType": "Block",
              "src": "879:7:47",
              "statements": []
            },
            "documentation": "@dev constructor",
            "id": 11929,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "869:2:47"
            },
            "payable": false,
            "returnParameters": {
              "id": 11927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "879:0:47"
            },
            "scope": 11959,
            "src": "858:28:47",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11957,
              "nodeType": "Block",
              "src": "1369:65:47",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11953,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11933,
                        "src": "1414:3:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11954,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11935,
                        "src": "1419:7:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11950,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11931,
                            "src": "1397:6:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Token_$11084",
                              "typeString": "contract IERC20Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Token_$11084",
                              "typeString": "contract IERC20Token"
                            }
                          ],
                          "id": 11949,
                          "name": "INonStandardERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11182,
                          "src": "1379:17:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_INonStandardERC20_$11182_$",
                            "typeString": "type(contract INonStandardERC20)"
                          }
                        },
                        "id": 11951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1379:25:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INonStandardERC20_$11182",
                          "typeString": "contract INonStandardERC20"
                        }
                      },
                      "id": 11952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11165,
                      "src": "1379:34:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 11955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1379:48:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11956,
                  "nodeType": "ExpressionStatement",
                  "src": "1379:48:47"
                }
              ]
            },
            "documentation": "@dev withdraws tokens held by the contract and sends them to an account\ncan only be called by the owner\n@param _token   ERC20 token contract address\n@param _to      account to receive the new amount\n@param _amount  amount to withdraw",
            "id": 11958,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 11938,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11937,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11764,
                  "src": "1279:9:47",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1279:9:47"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 11940,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11931,
                    "src": "1310:6:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11084",
                      "typeString": "contract IERC20Token"
                    }
                  }
                ],
                "id": 11941,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11939,
                  "name": "validAddress",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11991,
                  "src": "1297:12:47",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1297:20:47"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 11943,
                    "name": "_to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11933,
                    "src": "1339:3:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 11944,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11942,
                  "name": "validAddress",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11991,
                  "src": "1326:12:47",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1326:17:47"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 11946,
                    "name": "_to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11933,
                    "src": "1360:3:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 11947,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11945,
                  "name": "notThis",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 12005,
                  "src": "1352:7:47",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1352:12:47"
              }
            ],
            "name": "withdrawTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11931,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 11958,
                  "src": "1206:18:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$11084",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 11930,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11084,
                    "src": "1206:11:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11084",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11933,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 11958,
                  "src": "1226:11:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11935,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11958,
                  "src": "1239:15:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1239:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1205:50:47"
            },
            "payable": false,
            "returnParameters": {
              "id": 11948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1369:0:47"
            },
            "scope": 11959,
            "src": "1182:252:47",
            "stateMutability": "nonpayable",
            "superFunction": 12223,
            "visibility": "public"
          }
        ],
        "scope": 11960,
        "src": "761:675:47"
      }
    ],
    "src": "0:1437:47"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-12-04T00:14:08.417Z",
  "devdoc": {
    "methods": {
      "acceptOwnership()": {
        "details": "used by a new owner to accept an ownership transfer"
      },
      "transferOwnership(address)": {
        "details": "allows transferring the contract ownership the new owner still needs to accept the transfer can only be called by the contract owner",
        "params": {
          "_newOwner": "new contract owner"
        }
      },
      "withdrawTokens(address,address,uint256)": {
        "details": "withdraws tokens held by the contract and sends them to an account can only be called by the owner",
        "params": {
          "_amount": "amount to withdraw",
          "_to": "account to receive the new amount",
          "_token": "ERC20 token contract address"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}

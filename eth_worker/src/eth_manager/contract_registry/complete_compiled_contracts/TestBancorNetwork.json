{
  "contractName": "TestBancorNetwork",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_register",
          "type": "bool"
        }
      ],
      "name": "registerEtherToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_signerAddress",
          "type": "address"
        }
      ],
      "name": "setSignerAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "getReturnByPath",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BANCOR_CONVERTER_UPGRADER",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_for",
          "type": "address"
        },
        {
          "name": "_block",
          "type": "uint256"
        },
        {
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "name": "_v",
          "type": "uint8"
        },
        {
          "name": "_r",
          "type": "bytes32"
        },
        {
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "convertForPrioritized",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BNT_TOKEN",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "CONTRACT_REGISTRY",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BANCOR_CONVERTER_FACTORY",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "signerAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BNT_CONVERTER",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_toBlockchain",
          "type": "bytes32"
        },
        {
          "name": "_to",
          "type": "bytes32"
        },
        {
          "name": "_conversionId",
          "type": "uint256"
        },
        {
          "name": "_block",
          "type": "uint256"
        },
        {
          "name": "_v",
          "type": "uint8"
        },
        {
          "name": "_r",
          "type": "bytes32"
        },
        {
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "xConvertPrioritized",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_for",
          "type": "address"
        },
        {
          "name": "_block",
          "type": "uint256"
        },
        {
          "name": "_v",
          "type": "uint8"
        },
        {
          "name": "_r",
          "type": "bytes32"
        },
        {
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "convertForPrioritized2",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BANCOR_FORMULA",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "etherTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "CONTRACT_FEATURES",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "conversionHashes",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BANCOR_NETWORK",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BANCOR_GAS_PRICE_LIMIT",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "CONVERTER_CONVERSION_WHITELIST",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_registry",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_for",
          "type": "address"
        }
      ],
      "name": "claimAndConvertFor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_for",
          "type": "address"
        },
        {
          "name": "_customVal",
          "type": "uint256"
        },
        {
          "name": "_block",
          "type": "uint256"
        },
        {
          "name": "_v",
          "type": "uint8"
        },
        {
          "name": "_r",
          "type": "bytes32"
        },
        {
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "convertForPrioritized3",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BANCOR_X",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_toBlockchain",
          "type": "bytes32"
        },
        {
          "name": "_to",
          "type": "bytes32"
        },
        {
          "name": "_conversionId",
          "type": "uint256"
        }
      ],
      "name": "xConvert",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        }
      ],
      "name": "claimAndConvert",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        },
        {
          "name": "_for",
          "type": "address"
        }
      ],
      "name": "convertFor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BANCOR_X_UPGRADER",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_path",
          "type": "address[]"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReturn",
          "type": "uint256"
        }
      ],
      "name": "convert",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "NON_STANDARD_TOKEN_REGISTRY",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdate",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getReturnOld",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getReturnNew",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_register\",\"type\":\"bool\"}],\"name\":\"registerEtherToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_signerAddress\",\"type\":\"address\"}],\"name\":\"setSignerAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getReturnByPath\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BANCOR_CONVERTER_UPGRADER\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_for\",\"type\":\"address\"},{\"name\":\"_block\",\"type\":\"uint256\"},{\"name\":\"_nonce\",\"type\":\"uint256\"},{\"name\":\"_v\",\"type\":\"uint8\"},{\"name\":\"_r\",\"type\":\"bytes32\"},{\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"convertForPrioritized\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BNT_TOKEN\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_REGISTRY\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BANCOR_CONVERTER_FACTORY\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"signerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BNT_CONVERTER\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_toBlockchain\",\"type\":\"bytes32\"},{\"name\":\"_to\",\"type\":\"bytes32\"},{\"name\":\"_conversionId\",\"type\":\"uint256\"},{\"name\":\"_block\",\"type\":\"uint256\"},{\"name\":\"_v\",\"type\":\"uint8\"},{\"name\":\"_r\",\"type\":\"bytes32\"},{\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"xConvertPrioritized\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReturnNew\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_for\",\"type\":\"address\"},{\"name\":\"_block\",\"type\":\"uint256\"},{\"name\":\"_v\",\"type\":\"uint8\"},{\"name\":\"_r\",\"type\":\"bytes32\"},{\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"convertForPrioritized2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BANCOR_FORMULA\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"etherTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_FEATURES\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"conversionHashes\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BANCOR_NETWORK\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BANCOR_GAS_PRICE_LIMIT\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONVERTER_CONVERSION_WHITELIST\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReturnOld\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_registry\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_for\",\"type\":\"address\"}],\"name\":\"claimAndConvertFor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_for\",\"type\":\"address\"},{\"name\":\"_customVal\",\"type\":\"uint256\"},{\"name\":\"_block\",\"type\":\"uint256\"},{\"name\":\"_v\",\"type\":\"uint8\"},{\"name\":\"_r\",\"type\":\"bytes32\"},{\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"convertForPrioritized3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BANCOR_X\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_toBlockchain\",\"type\":\"bytes32\"},{\"name\":\"_to\",\"type\":\"bytes32\"},{\"name\":\"_conversionId\",\"type\":\"uint256\"}],\"name\":\"xConvert\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"}],\"name\":\"claimAndConvert\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"},{\"name\":\"_for\",\"type\":\"address\"}],\"name\":\"convertFor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BANCOR_X_UPGRADER\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_path\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"}],\"name\":\"convert\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"NON_STANDARD_TOKEN_REGISTRY\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_fee\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"acceptOwnership()\":{\"details\":\"used by a new owner to accept an ownership transfer\"},\"claimAndConvert(address[],uint256,uint256)\":{\"details\":\"claims the caller's tokens, converts them to any other token in the bancor network by following a predefined conversion path and transfers the result tokens back to the sender note that allowance must be set beforehand\",\"params\":{\"_amount\":\"amount to convert from (in the initial source token)\",\"_minReturn\":\"if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\",\"_path\":\"conversion path, see conversion path format above\"},\"return\":\"tokens issued in return\"},\"claimAndConvertFor(address[],uint256,uint256,address)\":{\"details\":\"claims the caller's tokens, converts them to any other token in the bancor network by following a predefined conversion path and transfers the result tokens to a target account note that allowance must be set beforehand\",\"params\":{\"_amount\":\"amount to convert from (in the initial source token)\",\"_for\":\"account that will receive the conversion result\",\"_minReturn\":\"if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\",\"_path\":\"conversion path, see conversion path format above\"},\"return\":\"tokens issued in return\"},\"convert(address[],uint256,uint256)\":{\"details\":\"converts the token to any other token in the bancor network by following a predefined conversion path and transfers the result tokens back to the sender note that the converter should already own the source tokens\",\"params\":{\"_amount\":\"amount to convert from (in the initial source token)\",\"_minReturn\":\"if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\",\"_path\":\"conversion path, see conversion path format above\"},\"return\":\"tokens issued in return\"},\"convertFor(address[],uint256,uint256,address)\":{\"details\":\"converts the token to any other token in the bancor network by following a predefined conversion path and transfers the result tokens to a target account note that the converter should already own the source tokens\",\"params\":{\"_amount\":\"amount to convert from (in the initial source token)\",\"_for\":\"account that will receive the conversion result\",\"_minReturn\":\"if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\",\"_path\":\"conversion path, see conversion path format above\"},\"return\":\"tokens issued in return\"},\"convertForPrioritized3(address[],uint256,uint256,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"converts the token to any other token in the bancor network by following a predefined conversion path and transfers the result tokens to a target account. this version of the function also allows the verified signer to bypass the universal gas price limit. note that the converter should already own the source tokens\",\"params\":{\"_amount\":\"amount to convert from (in the initial source token)\",\"_block\":\"if the current block exceeded the given parameter - it is cancelled\",\"_customVal\":\"custom value that was signed for prioritized conversion\",\"_for\":\"account that will receive the conversion result\",\"_minReturn\":\"if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\",\"_path\":\"conversion path, see conversion path format above\",\"_r\":\"(signature[0:64]) associated with the signer address and helps to validate if the signature is legit\",\"_s\":\"(signature[64:128]) associated with the signer address and helps to validate if the signature is legit\",\"_v\":\"(signature[128:130]) associated with the signer address and helps to validate if the signature is legit\"},\"return\":\"tokens issued in return\"},\"getReturnByPath(address[],uint256)\":{\"details\":\"returns the expected return amount for converting a specific amount by following a given conversion path. notice that there is no support for circular paths.\",\"params\":{\"_amount\":\"amount to convert from (in the initial source token)\",\"_path\":\"conversion path, see conversion path format above\"},\"return\":\"expected conversion return amount and conversion fee\"},\"registerEtherToken(address,bool)\":{\"details\":\"allows the owner to register/unregister ether tokens\",\"params\":{\"_register\":\"true to register, false to unregister\",\"_token\":\"ether token contract address\"}},\"transferOwnership(address)\":{\"details\":\"allows transferring the contract ownership the new owner still needs to accept the transfer can only be called by the contract owner\",\"params\":{\"_newOwner\":\"new contract owner\"}},\"withdrawTokens(address,address,uint256)\":{\"details\":\"withdraws tokens held by the contract and sends them to an account can only be called by the owner\",\"params\":{\"_amount\":\"amount to withdraw\",\"_to\":\"account to receive the new amount\",\"_token\":\"ERC20 token contract address\"}},\"xConvert(address[],uint256,uint256,bytes32,bytes32,uint256)\":{\"details\":\"converts any other token to BNT in the bancor network by following a predefined conversion path and transfers the resulting tokens to BancorX. note that the network should already have been given allowance of the source token (if not ETH)\",\"params\":{\"_amount\":\"amount to convert from (in the initial source token)\",\"_conversionId\":\"pre-determined unique (if non zero) id which refers to this transaction \",\"_minReturn\":\"if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\",\"_path\":\"conversion path, see conversion path format above\",\"_to\":\"address/account on _toBlockchain to send the BNT to\",\"_toBlockchain\":\"blockchain BNT will be issued on\"},\"return\":\"the amount of BNT received from this conversion\"},\"xConvertPrioritized(address[],uint256,uint256,bytes32,bytes32,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"converts any other token to BNT in the bancor network by following a predefined conversion path and transfers the resulting tokens to BancorX. this version of the function also allows the verified signer to bypass the universal gas price limit. note that the network should already have been given allowance of the source token (if not ETH)\",\"params\":{\"_amount\":\"amount to convert from (in the initial source token)\",\"_block\":\"if the current block exceeded the given parameter - it is cancelled\",\"_conversionId\":\"pre-determined unique (if non zero) id which refers to this transaction \",\"_minReturn\":\"if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero\",\"_path\":\"conversion path, see conversion path format above\",\"_r\":\"(signature[0:64]) associated with the signer address and helps to validate if the signature is legit\",\"_s\":\"(signature[64:128]) associated with the signer address and helps to validate if the signature is legit\",\"_to\":\"address/account on _toBlockchain to send the BNT to\",\"_toBlockchain\":\"blockchain BNT will be issued on\",\"_v\":\"(signature[128:130]) associated with the signer address and helps to validate if the signature is legit\"},\"return\":\"the amount of BNT received from this conversion\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/helpers/TestBancorNetwork.sol\":\"TestBancorNetwork\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/BancorNetwork.sol\":{\"keccak256\":\"0xb7d0f30e4baba65bcccfe74c72c6ff9112fc33ad1a4f3c1696ed416f163644d0\",\"urls\":[\"bzzr://5a086e39c9f543d564df4f5128f8099943693e5c7c65166e1e4d5759f951408a\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/ContractIds.sol\":{\"keccak256\":\"0x797ef82b25e32d08de1df3cf988c9e25b1b0aa6d3c7cabfc959ea3aaa2e1b8bb\",\"urls\":[\"bzzr://050610331e8915acbf660d1650d4dafb4f49423cfa70b76fb99898db93e765eb\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/FeatureIds.sol\":{\"keccak256\":\"0x23a2281d958edbf84b1fc22540f3937e280f88da34da1d9fe2f2c3530896506e\",\"urls\":[\"bzzr://d422d034b140b4edae0d7dba138f9d8975e15a069f761595ab7853ba2e2d0982\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/IBancorNetwork.sol\":{\"keccak256\":\"0xfa7c9e62eeb6dc7a69e98901c680859ff66a165c6a0fc113cea54e8d24be56e5\",\"urls\":[\"bzzr://2cbda6d76981f798ab94410ebb17728e8884222cd37fb79c34b861b242b1f3bc\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/bancorx/interfaces/IBancorX.sol\":{\"keccak256\":\"0x23d2f7e6d9f9028d547860714cf0494ee508ba525f1d50ecdb05665a04908cea\",\"urls\":[\"bzzr://4062f3a5102874394adffa0b616e2f9bf7faa0dc37cc9611505e2943e451cc0a\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/converter/interfaces/IBancorConverter.sol\":{\"keccak256\":\"0x2af1dc3731bc3d9c2b6b9f512fd04face50efc7c253a31552ce1121a80ec89c1\",\"urls\":[\"bzzr://4f258d6672c4e44ad1bd19ca0d6072181e1634d06d9250a0b1dd0d1d7351cbf2\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/converter/interfaces/IBancorFormula.sol\":{\"keccak256\":\"0x74e9b0c619770252c5bd6cbb5b707849c13cd9cb089689f003359a8d4538c063\",\"urls\":[\"bzzr://16e3303e7fb66363b4e6ce4b59066a3fec0882a0ea99775795cc819ae44d3a1d\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/converter/interfaces/IBancorGasPriceLimit.sol\":{\"keccak256\":\"0xe4beb2c3258ba72fb8a9e901fa451eaabde77a40ff540c18181b71b4149e7c88\",\"urls\":[\"bzzr://c867e635590ea2a27b60d80cd89bdca75fbd6a8d1c3abd894790464ea68d0435\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/helpers/TestBancorNetwork.sol\":{\"keccak256\":\"0xe887bd51059ef27deb3bec5fec1c924e1a35d57703eac94aa1640539d127ccfc\",\"urls\":[\"bzzr://0fb9024d0d79fc616cbc9175dad1f20617a00c6cd3100fcae6b868bfde9b17c9\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/token/interfaces/IERC20Token.sol\":{\"keccak256\":\"0x465f98ed290fb4f65f2d74e938f47c2fa9f7302e766266d8f9326d4c703d5ce3\",\"urls\":[\"bzzr://9746fbda9ee3a4d1e0ed3c5f5d27ebb93114139ad29ae04f313de057f9d1bc92\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/token/interfaces/IEtherToken.sol\":{\"keccak256\":\"0x7219a36940e2768913dc856d405f46378697b600fbd86717d8a444e701797bce\",\"urls\":[\"bzzr://473180ce9909ef17c50f675b7092a127114e9138409294f92a062566e6927ae3\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/token/interfaces/INonStandardERC20.sol\":{\"keccak256\":\"0x26596dd8e564493f7e821102865fb382c21bbedd44ebc920c8d63626f1bf19dc\",\"urls\":[\"bzzr://c750029c9ba7521fbe0c1827a4854a4b8db274d4402e00daaa4683a024c44d93\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/token/interfaces/ISmartToken.sol\":{\"keccak256\":\"0xd9369c561a659cdf78c9b7ad6458c5fd566296bc743f06011b5b02ffeadf0310\",\"urls\":[\"bzzr://b3f5f823967d07420b2c919fb28a51f94206f541124f4f63d835285d0fff8910\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/Owned.sol\":{\"keccak256\":\"0x420234d13d5a10debece92f5264fe4e548d38e4ddba4bb0fae67f121efb5cfb8\",\"urls\":[\"bzzr://6a0a7136d5633bc5e94e7b5f7fd84df2949ec87061ef16d4cb5ec869ebc6de3d\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/SafeMath.sol\":{\"keccak256\":\"0xcc762e1392acd929f86bc79f2d553fefa6692756d84640d3d4530db81bfdae3a\",\"urls\":[\"bzzr://d78ab9d7e21198a64398840779fce2f9631685aab56066e4dbb0826950f40a35\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/TokenHolder.sol\":{\"keccak256\":\"0xea5c8f330999bb5e7360127d38d5a1ce4b1a4b85392c28da43b8c2238884b3c0\",\"urls\":[\"bzzr://6415cecbff420d0f0e0568b73f182000c0bc3d0c1b48930bc84392d1b6c29e03\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/Utils.sol\":{\"keccak256\":\"0x4aaa2acf58cbeaed5f484bdca75daf7caacde07d62ca44b97f020381fc8801e3\",\"urls\":[\"bzzr://feed4fa84f6d4ea9f8e2520e8748cc4e7f8cf2104c8dcdff086db6129fba6f10\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/interfaces/IAddressList.sol\":{\"keccak256\":\"0x3de4d53e90ce340cf45e9fde143fa6956ff0ab2c40a8ac7f155995ab09736390\",\"urls\":[\"bzzr://cc8bbe33aa156cd273b4f60ef678bd489c9a052962323c48ae571625ec5f686a\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/interfaces/IContractFeatures.sol\":{\"keccak256\":\"0x021e780f03961a8498409da5e57e36844bb6d06e6c6acf8a895f23c4c260b33e\",\"urls\":[\"bzzr://825b4d839d0bca34665f11c61b52de5887cb068302a4cbd262c5bf994b16940d\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/interfaces/IContractRegistry.sol\":{\"keccak256\":\"0x4fc9f35a48ef73f00d5ea0a6fb2018eb5801f1c5b828935a34cfebf479084c86\",\"urls\":[\"bzzr://3f880643a62ae35a2592ea2f079452a9276dc1d54d5d1c33462738109c787db5\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/interfaces/IOwned.sol\":{\"keccak256\":\"0x3bfadfd06a9f37a8687474694252513f00d84ff9074c9d3c69c311d62686e588\",\"urls\":[\"bzzr://b168ba3d91c3119b53b54679bec05592fe124e42f2345e785a4fd08c8225b39e\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/interfaces/ITokenHolder.sol\":{\"keccak256\":\"0x894a791236cbfdc5fd00d2d48f5be0b988d98804b89d9ce3f3c3c90477d590a1\",\"urls\":[\"bzzr://30f405a05448cc0f2efa99e3fc61ff424a8b6c1cee5c2ad05b5542fe41b58b39\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/interfaces/IWhitelist.sol\":{\"keccak256\":\"0x6f2de503926432c5e49191520bdb0c0463ed69924287529b0f83ef95565287fb\",\"urls\":[\"bzzr://75da01831a1c6509463537ea59b0cfc88349b8ebb5d3fc56a1260d0e1953acdc\"]}},\"version\":1}",
  "bytecode": "0x608060405260028054600160a060020a03191690553480156200002157600080fd5b506040516040806200354f8339810160405280516020909101516000805433600160a060020a03199182161790915560038054909116600117905581620000676200010a565b90815260405190819003602001906000f0801580156200008b573d6000803e3d6000fd5b5060068054600160a060020a031916600160a060020a03929092169190911790558181620000b86200011a565b9182526020820152604080519182900301906000f080158015620000e0573d6000803e3d6000fd5b5060078054600160a060020a031916600160a060020a0392909216919091179055506200012b9050565b60405160f2806200335383390190565b60405161010a806200344583390190565b613218806200013b6000396000f3006080604052600436106101b35763ffffffff60e060020a60003504166302ef521e81146101b8578063046dc166146101e05780630c8496cc146102015780630c87355e146102715780631134269a146102985780631d000b611461031557806325f9bfef1461032a5780635a46f06c1461033f5780635b7633d0146103545780635e35359e1461038557806362614ae6146103af5780636896b999146103c4578063699e75461461043f5780636b08f2ef146104545780636d7bd3fc146104cb57806379ba5097146104e05780637b103999146104f55780638077ccf71461050a57806383315b6e1461053f57806389e63a60146105545780638da5cb5b1461056c5780639232494e146105815780639249993a1461059657806392d1abb7146105ab57806398e95740146105c0578063a91ee0dc146105d5578063b1e9932b146105f6578063b406d38614610661578063c4a8598e146106de578063c52173de146106f3578063c7ba24bc14610752578063c98fefed146107b0578063cc97b38f1461080e578063d4ee1d9014610823578063f2fde38b14610838578063f3898a9714610859578063f5286b9c146108aa575b600080fd5b3480156101c457600080fd5b506101de600160a060020a036004351660243515156108bf565b005b3480156101ec57600080fd5b506101de600160a060020a0360043516610930565b34801561020d57600080fd5b50604080516020600480358082013583810280860185019096528085526102589536959394602494938501929182918501908490808284375094975050933594506109a59350505050565b6040805192835260208301919091528051918290030190f35b34801561027d57600080fd5b50610286611170565b60408051918252519081900360200190f35b604080516020600480358082013583810280860185019096528085526102869536959394602494938501929182918501908490808284375094975050843595505050602083013592600160a060020a0360408201351692506060810135915060808101359060ff60a0820135169060c08101359060e00135611194565b34801561032157600080fd5b506102866111b5565b34801561033657600080fd5b506102866111d9565b34801561034b57600080fd5b506102866111fd565b34801561036057600080fd5b50610369611221565b60408051600160a060020a039092168252519081900360200190f35b34801561039157600080fd5b506101de600160a060020a0360043581169060243516604435611230565b3480156103bb57600080fd5b5061028661130d565b604080516020600480358082013583810280860185019096528085526102869536959394602494938501929182918501908490808284375094975050843595505050602083013592604081013592506060810135915060808101359060a08101359060ff60c0820135169060e0810135906101000135611331565b34801561044b57600080fd5b506102586114a6565b604080516020600480358082013583810280860185019096528085526102869536959394602494938501929182918501908490808284375094975050843595505050602083013592600160a060020a0360408201351692506060810135915060ff6080820135169060a08101359060c001356114cb565b3480156104d757600080fd5b506102866114eb565b3480156104ec57600080fd5b506101de61150f565b34801561050157600080fd5b50610369611597565b34801561051657600080fd5b5061052b600160a060020a03600435166115a6565b604080519115158252519081900360200190f35b34801561054b57600080fd5b506102866115bb565b34801561056057600080fd5b5061052b6004356115df565b34801561057857600080fd5b506103696115f4565b34801561058d57600080fd5b50610286611603565b3480156105a257600080fd5b50610286611627565b3480156105b757600080fd5b5061028661164b565b3480156105cc57600080fd5b50610258611650565b3480156105e157600080fd5b506101de600160a060020a036004351661166d565b34801561060257600080fd5b5060408051602060048035808201358381028086018501909652808552610286953695939460249493850192918291850190849080828437509497505084359550505060208301359260400135600160a060020a031691506116e29050565b604080516020600480358082013583810280860185019096528085526102869536959394602494938501929182918501908490808284375094975050843595505050602083013592600160a060020a0360408201351692506060810135915060808101359060ff60a0820135169060c08101359060e00135611722565b3480156106ea57600080fd5b506102866117fd565b604080516020600480358082013583810280860185019096528085526102869536959394602494938501929182918501908490808284375094975050843595505050602083013592604081013592506060810135915060800135611821565b34801561075e57600080fd5b5060408051602060048035808201358381028086018501909652808552610286953695939460249493850192918291850190849080828437509497505084359550505060209092013591506118409050565b60408051602060048035808201358381028086018501909652808552610286953695939460249493850192918291850190849080828437509497505084359550505060208301359260400135600160a060020a031691506118569050565b34801561081a57600080fd5b50610286611872565b34801561082f57600080fd5b50610369611896565b34801561084457600080fd5b506101de600160a060020a03600435166118a5565b60408051602060048035808201358381028086018501909652808552610286953695939460249493850192918291850190849080828437509497505084359550505060209092013591506119069050565b3480156108b657600080fd5b50610286611914565b600054600160a060020a031633146108d657600080fd5b81600160a060020a03811615156108ec57600080fd5b82600160a060020a03811630141561090357600080fd5b5050600160a060020a03919091166000908152600460205260409020805460ff1916911515919091179055565b600054600160a060020a0316331461094757600080fd5b80600160a060020a038116151561095d57600080fd5b81600160a060020a03811630141561097457600080fd5b50506002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600080600080600080600080600080600080600080600360009054906101000a9004600160a060020a0316600160a060020a03166321f8a7217f42616e636f72466f726d756c61000000000000000000000000000000000000006040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b158015610a4057600080fd5b505af1158015610a54573d6000803e3d6000fd5b505050506040513d6020811015610a6a57600080fd5b810190808051906020019092919050505091508e97508f6000815181101515610a8f57fe5b906020019060200201519b50600190505b8f5181101561115a578f81815181101515610ab757fe5b906020019060200201519a508f81600101815181101515610ad457fe5b9060200190602002015199508a600160a060020a0316638da5cb5b6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610b1e57600080fd5b505af1158015610b32573d6000803e3d6000fd5b505050506040513d6020811015610b4857600080fd5b50519850600160a060020a038a8116908c161415610e6e5782600160a060020a03168b600160a060020a031614610be8578a600160a060020a03166318160ddd6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610bb757600080fd5b505af1158015610bcb573d6000803e3d6000fd5b505050506040513d6020811015610be157600080fd5b5051610bea565b855b9550610bf6898d611938565b1515610c0157600080fd5b88600160a060020a031663d89595128d6040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b158015610c5c57600080fd5b505af1158015610c70573d6000803e3d6000fd5b505050506040513d6020811015610c8657600080fd5b50519450610c94898d6119d7565b604080517f29a00e7c000000000000000000000000000000000000000000000000000000008152600481018990526024810188905263ffffffff83166044820152606481018b90529051919550600160a060020a038416916329a00e7c916084808201926020929091908290030181600087803b158015610d1457600080fd5b505af1158015610d28573d6000803e3d6000fd5b505050506040513d6020811015610d3e57600080fd5b5051604080517f579cd3ca0000000000000000000000000000000000000000000000000000000081529051919950610df491620f424091610de891600160a060020a038e169163579cd3ca9160048083019260209291908290030181600087803b158015610dab57600080fd5b505af1158015610dbf573d6000803e3d6000fd5b505050506040513d6020811015610dd557600080fd5b50518b9063ffffffff90811690611a7616565b9063ffffffff611aaf16565b96508688039750878b600160a060020a03166318160ddd6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610e3a57600080fd5b505af1158015610e4e573d6000803e3d6000fd5b505050506040513d6020811015610e6457600080fd5b505101955061114a565b8a600160a060020a03168c600160a060020a031614156111385782600160a060020a03168b600160a060020a031614610f10578a600160a060020a03166318160ddd6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610edf57600080fd5b505af1158015610ef3573d6000803e3d6000fd5b505050506040513d6020811015610f0957600080fd5b5051610f12565b855b955088600160a060020a031663d89595128b6040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b158015610f6f57600080fd5b505af1158015610f83573d6000803e3d6000fd5b505050506040513d6020811015610f9957600080fd5b50519450610fa7898b6119d7565b604080517f49f9b0f7000000000000000000000000000000000000000000000000000000008152600481018990526024810188905263ffffffff83166044820152606481018b90529051919550600160a060020a038416916349f9b0f7916084808201926020929091908290030181600087803b15801561102757600080fd5b505af115801561103b573d6000803e3d6000fd5b505050506040513d602081101561105157600080fd5b5051604080517f579cd3ca00000000000000000000000000000000000000000000000000000000815290519199506110be91620f424091610de891600160a060020a038e169163579cd3ca9160048083019260209291908290030181600087803b158015610dab57600080fd5b96508688039750878b600160a060020a03166318160ddd6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561110457600080fd5b505af1158015611118573d6000803e3d6000fd5b505050506040513d602081101561112e57600080fd5b505103955061114a565b611144898d8c8b611ad2565b90985096505b989a508a988a9250600201610aa0565b50959e949d50939b505050505050505050505050565b7f42616e636f72436f6e766572746572557067726164657200000000000000000081565b60006111a78a8a8a8a8d8b8a8a8a611722565b9a9950505050505050505050565b7f424e54546f6b656e00000000000000000000000000000000000000000000000081565b7f436f6e747261637452656769737472790000000000000000000000000000000081565b7f42616e636f72436f6e766572746572466163746f72790000000000000000000081565b600254600160a060020a031681565b600054600160a060020a0316331461124757600080fd5b82600160a060020a038116151561125d57600080fd5b82600160a060020a038116151561127357600080fd5b83600160a060020a03811630141561128a57600080fd5b85600160a060020a031663a9059cbb86866040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b1580156112ed57600080fd5b505af1158015611301573d6000803e3d6000fd5b50505050505050505050565b7f424e54436f6e766572746572000000000000000000000000000000000000000081565b6000806113428c8c88888888611bee565b6113678c8c8c8f600081518110151561135757fe5b9060200190602002015130611f20565b6003546040805160e260020a632ecd14d30281527f42616e636f72580000000000000000000000000000000000000000000000000060048201529051929450600160a060020a03909116925063bb34534c9160248083019260209291908290030181600087803b1580156113da57600080fd5b505af11580156113ee573d6000803e3d6000fd5b505050506040513d602081101561140457600080fd5b5051604080517f427c0374000000000000000000000000000000000000000000000000000000008152600481018c9052602481018b905260448101849052606481018a90529051600160a060020a039092169163427c03749160848082019260009290919082900301818387803b15801561147e57600080fd5b505af1158015611492573d6000803e3d6000fd5b50929e9d5050505050505050505050505050565b60075460009081906114c390600160a060020a0316828080611ad2565b915091509091565b60006114de898989898c8a8a8a8a611722565b9998505050505050505050565b7f42616e636f72466f726d756c610000000000000000000000000000000000000081565b600154600160a060020a0316331461152657600080fd5b60015460008054604051600160a060020a0393841693909116917f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a91a3600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600354600160a060020a031681565b60046020526000908152604090205460ff1681565b7f436f6e747261637446656174757265730000000000000000000000000000000081565b60056020526000908152604090205460ff1681565b600054600160a060020a031681565b7f42616e636f724e6574776f726b0000000000000000000000000000000000000081565b7f42616e636f7247617350726963654c696d69740000000000000000000000000081565b600181565b60065460009081906114c390600160a060020a0316828080611ad2565b600054600160a060020a0316331461168457600080fd5b80600160a060020a038116151561169a57600080fd5b81600160a060020a0381163014156116b157600080fd5b50506003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000808560008151811015156116f457fe5b90602001906020020151905061170c8133308861218f565b61171886868686611856565b9695505050505050565b6000808a600081518110151561173457fe5b90602001906020020151905034600014806117715750348a1480156117715750600160a060020a03811660009081526004602052604090205460ff165b151561177c57600080fd5b60003411156117dd5780600160a060020a031663d0e30db0346040518263ffffffff1660e060020a0281526004016000604051808303818588803b1580156117c357600080fd5b505af11580156117d7573d6000803e3d6000fd5b50505050505b6117ee8b8b8b8b8b8b8b8b8b612527565b9b9a5050505050505050505050565b7f42616e636f72580000000000000000000000000000000000000000000000000081565b600061183587878787878787808080611331565b979650505050505050565b600061184e848484336116e2565b949350505050565b6000611869858585858286808080611722565b95945050505050565b7f42616e636f72585570677261646572000000000000000000000000000000000081565b600154600160a060020a031681565b600054600160a060020a031633146118bc57600080fd5b600054600160a060020a03828116911614156118d757600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600061184e84848433611856565b7f4e6f6e5374616e64617264546f6b656e5265676973747279000000000000000081565b60008060008060008087600160a060020a0316630e53aae9886040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a0316815260200191505060a060405180830381600087803b15801561199c57600080fd5b505af11580156119b0573d6000803e3d6000fd5b505050506040513d60a08110156119c657600080fd5b506060015198975050505050505050565b60008060008060008087600160a060020a0316630e53aae9886040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a0316815260200191505060a060405180830381600087803b158015611a3b57600080fd5b505af1158015611a4f573d6000803e3d6000fd5b505050506040513d60a0811015611a6557600080fd5b506020015198975050505050505050565b600080831515611a895760009150611aa8565b50828202828482811515611a9957fe5b0414611aa457600080fd5b8091505b5092915050565b600080808311611abe57600080fd5b8284811515611ac957fe5b04949350505050565b600080611add6131d1565b604080517f67657452657475726e28616464726573732c616464726573732c75696e74323581527f36290000000000000000000000000000000000000000000000000000000000006020808301919091528251918290036022018220600160a060020a03808b166024850152891660448401526064808401899052845180850390910181526084909301845290820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000060e060020a9384900490930292909216919091178152815191929184918b5afa1515611bd857600080fd5b5080516020909101519097909650945050505050565b6000808760028151118015611c0557506015815111155b8015611c1657508051600290066001145b1515611c2157600080fd5b886000815181101515611c3057fe5b9060200190602002015192503460001480611c6d57503488148015611c6d5750600160a060020a03831660009081526004602052604090205460ff165b1515611c7857600080fd5b6003546040805160e260020a632ecd14d30281527f424e54546f6b656e00000000000000000000000000000000000000000000000060048201529051600160a060020a039092169163bb34534c916024808201926020929091908290030181600087803b158015611ce857600080fd5b505af1158015611cfc573d6000803e3d6000fd5b505050506040513d6020811015611d1257600080fd5b50518951600160a060020a03909116908a906000198101908110611d3257fe5b60209081029091010151600160a060020a031614611d4f57600080fd5b6000341115611db45782600160a060020a031663d0e30db0346040518263ffffffff1660e060020a0281526004016000604051808303818588803b158015611d9657600080fd5b505af1158015611daa573d6000803e3d6000fd5b5050505050611dc0565b611dc08333308b61218f565b60ff8616158015611dcf575084155b8015611dd9575083155b15611efb576003546040805160e260020a632ecd14d30281527f42616e636f7247617350726963654c696d69740000000000000000000000000060048201529051600160a060020a039092169163bb34534c916024808201926020929091908290030181600087803b158015611e4e57600080fd5b505af1158015611e62573d6000803e3d6000fd5b505050506040513d6020811015611e7857600080fd5b5051604080517f6b4dff1f0000000000000000000000000000000000000000000000000000000081523a60048201529051919350600160a060020a03841691636b4dff1f9160248082019260009290919082900301818387803b158015611ede57600080fd5b505af1158015611ef2573d6000803e3d6000fd5b50505050611f15565b611f0a898989338a8a8a61279e565b1515611f1557600080fd5b505050505050505050565b6003546040805160e260020a632ecd14d30281527f436f6e7472616374466561747572657300000000000000000000000000000000600482015290516000928392839283928392839283928392600160a060020a039091169163bb34534c9160248082019260209290919082900301818787803b158015611fa057600080fd5b505af1158015611fb4573d6000803e3d6000fd5b505050506040513d6020811015611fca57600080fd5b50518d519093509150600190505b8181101561217e578c81815181101515611fee57fe5b9060200190602002015195508c8160010181518110151561200b57fe5b90602001906020020151945085600160a060020a0316638da5cb5b6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561205557600080fd5b505af1158015612069573d6000803e3d6000fd5b505050506040513d602081101561207f57600080fd5b5051935061208e848a85612a5d565b600160a060020a03868116908b16146120ac576120ac8a858e612c19565b83600160a060020a0316635e5144eb8b878f6002870386146120cf5760016120d1565b8f5b6040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184600160a060020a0316600160a060020a03168152602001838152602001828152602001945050505050602060405180830381600087803b15801561214357600080fd5b505af1158015612157573d6000803e3d6000fd5b505050506040513d602081101561216d57600080fd5b50519b509398508893600201611fd8565b50929b999a50505050505050505050565b6003546040805160e260020a632ecd14d30281527f4e6f6e5374616e64617264546f6b656e526567697374727900000000000000006004820152905160009283928392600160a060020a039092169163bb34534c9160248082019260209290919082900301818787803b15801561220557600080fd5b505af1158015612219573d6000803e3d6000fd5b505050506040513d602081101561222f57600080fd5b5051604080517faeea10bd000000000000000000000000000000000000000000000000000000008152600160a060020a038a8116600483015291519295509085169163aeea10bd916024808201926020929091908290030181600087803b15801561229957600080fd5b505af11580156122ad573d6000803e3d6000fd5b505050506040513d60208110156122c357600080fd5b5051156124765786600160a060020a03166370a08231866040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b15801561232557600080fd5b505af1158015612339573d6000803e3d6000fd5b505050506040513d602081101561234f57600080fd5b5051604080517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a0389811660048301528881166024830152604482018890529151929450908916916323b872dd9160648082019260009290919082900301818387803b1580156123c757600080fd5b505af11580156123db573d6000803e3d6000fd5b5050505086600160a060020a03166370a08231866040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b15801561243a57600080fd5b505af115801561244e573d6000803e3d6000fd5b505050506040513d602081101561246457600080fd5b5051905081811161247157fe5b61251e565b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a0388811660048301528781166024830152604482018790529151918916916323b872dd916064808201926020929091908290030181600087803b1580156124ea57600080fd5b505af11580156124fe573d6000803e3d6000fd5b505050506040513d602081101561251457600080fd5b5051151561251e57fe5b50505050505050565b6000806000808c6002815111801561254157506015815111155b801561255257508051600290066001145b151561255d57600080fd5b60ff881615801561256c575086155b8015612576575085155b15612698576003546040805160e260020a632ecd14d30281527f42616e636f7247617350726963654c696d69740000000000000000000000000060048201529051600160a060020a039092169163bb34534c916024808201926020929091908290030181600087803b1580156125eb57600080fd5b505af11580156125ff573d6000803e3d6000fd5b505050506040513d602081101561261557600080fd5b5051604080517f6b4dff1f0000000000000000000000000000000000000000000000000000000081523a60048201529051919550600160a060020a03861691636b4dff1f9160248082019260009290919082900301818387803b15801561267b57600080fd5b505af115801561268f573d6000803e3d6000fd5b505050506126b2565b6126a78e8b8b8e8c8c8c61279e565b15156126b257600080fd5b8d60008151811015156126c157fe5b9060200190602002015192506126da8e8e8e868f611f20565b600160a060020a038216600090815260046020526040902054909e5090925060ff16156127815781600160a060020a031663205c28788c8f6040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b15801561276457600080fd5b505af1158015612778573d6000803e3d6000fd5b5050505061278c565b61278c828c8f612e53565b509a9c9b505050505050505050505050565b600080600080883a89338d8f6040516020018087815260200186815260200185600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140184600160a060020a0316600160a060020a03166c01000000000000000000000000028152601401838152602001828051906020019060200280838360005b8381101561283a578181015183820152602001612822565b5050505090500196505050505050506040516020818303038152906040526040518082805190602001908083835b602083106128875780518252601f199092019160209182019101612868565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912060008181526005909252929020549196505060ff161591505080156128d45750884311155b15156128df57600080fd5b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c80830187905283518084039091018152605c90920192839052815191929182918401908083835b602083106129555780518252601f199092019160209182019101612936565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209150600260009054906101000a9004600160a060020a0316600160a060020a0316600183898989604051600081526020016040526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af1158015612a1a573d6000803e3d6000fd5b50505060206040510351600160a060020a031614905080156111a7576000838152600560205260409020805460ff191660011790559a9950505050505050505050565b604080517fa5fbf287000000000000000000000000000000000000000000000000000000008152600160a060020a03858116600483015260016024830152915160009284169163a5fbf28791604480830192602092919082900301818787803b158015612ac957600080fd5b505af1158015612add573d6000803e3d6000fd5b505050506040513d6020811015612af357600080fd5b50511515612b0057612c13565b83600160a060020a031663c45d3d926040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015612b3e57600080fd5b505af1158015612b52573d6000803e3d6000fd5b505050506040513d6020811015612b6857600080fd5b50519050600160a060020a0381161515612b8157612c13565b80600160a060020a0316633af32abf846040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b158015612bdc57600080fd5b505af1158015612bf0573d6000803e3d6000fd5b505050506040513d6020811015612c0657600080fd5b50511515612c1357600080fd5b50505050565b604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a0384811660248301529151839286169163dd62ed3e9160448083019260209291908290030181600087803b158015612c8457600080fd5b505af1158015612c98573d6000803e3d6000fd5b505050506040513d6020811015612cae57600080fd5b505110612cba57612e4e565b604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a03848116602483015291519185169163dd62ed3e916044808201926020929091908290030181600087803b158015612d2557600080fd5b505af1158015612d39573d6000803e3d6000fd5b505050506040513d6020811015612d4f57600080fd5b505115612dd757604080517f095ea7b3000000000000000000000000000000000000000000000000000000008152600160a060020a03848116600483015260006024830181905292519086169263095ea7b3926044808201939182900301818387803b158015612dbe57600080fd5b505af1158015612dd2573d6000803e3d6000fd5b505050505b82600160a060020a031663095ea7b383836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b158015612e3a57600080fd5b505af115801561251e573d6000803e3d6000fd5b505050565b6003546040805160e260020a632ecd14d30281527f4e6f6e5374616e64617264546f6b656e526567697374727900000000000000006004820152905160009283928392600160a060020a039092169163bb34534c9160248082019260209290919082900301818787803b158015612ec957600080fd5b505af1158015612edd573d6000803e3d6000fd5b505050506040513d6020811015612ef357600080fd5b5051604080517faeea10bd000000000000000000000000000000000000000000000000000000008152600160a060020a03898116600483015291519295509085169163aeea10bd916024808201926020929091908290030181600087803b158015612f5d57600080fd5b505af1158015612f71573d6000803e3d6000fd5b505050506040513d6020811015612f8757600080fd5b5051156131325785600160a060020a03166370a08231866040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b158015612fe957600080fd5b505af1158015612ffd573d6000803e3d6000fd5b505050506040513d602081101561301357600080fd5b5051604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0388811660048301526024820188905291519294509088169163a9059cbb9160448082019260009290919082900301818387803b15801561308357600080fd5b505af1158015613097573d6000803e3d6000fd5b5050505085600160a060020a03166370a08231866040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b1580156130f657600080fd5b505af115801561310a573d6000803e3d6000fd5b505050506040513d602081101561312057600080fd5b5051905081811161312d57fe5b6131c9565b85600160a060020a031663a9059cbb86866040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561319557600080fd5b505af11580156131a9573d6000803e3d6000fd5b505050506040513d60208110156131bf57600080fd5b505115156131c957fe5b505050505050565b604080518082018252906002908290803883395091929150505600a165627a7a7230582063f397d618580da9541b709a956a4f1157a24a03955bbe1803451fe24dd7930f0029608060405234801561001057600080fd5b506040516020806100f2833981016040525160005560bf806100336000396000f300608060405260043610603e5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631e1401f881146043575b600080fd5b348015604e57600080fd5b50607773ffffffffffffffffffffffffffffffffffffffff600435811690602435166044356089565b60408051918252519081900360200190f35b60005493925050505600a165627a7a72305820ca098f87a166fb9e1886c432e850b35f66d5e561e1c3d1aad684bbebb1966ec20029608060405234801561001057600080fd5b5060405160408061010a83398101604052805160209091015160009190915560015560ca806100406000396000f300608060405260043610603e5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631e1401f881146043575b600080fd5b348015604e57600080fd5b50607773ffffffffffffffffffffffffffffffffffffffff600435811690602435166044356090565b6040805192835260208301919091528051918290030190f35b6000546001549350939150505600a165627a7a72305820daf03dc7f981045d000fb41d0aa4daac0e1f0052e359fee84d69d7cd500b79690029",
  "deployedBytecode": "0x6080604052600436106101b35763ffffffff60e060020a60003504166302ef521e81146101b8578063046dc166146101e05780630c8496cc146102015780630c87355e146102715780631134269a146102985780631d000b611461031557806325f9bfef1461032a5780635a46f06c1461033f5780635b7633d0146103545780635e35359e1461038557806362614ae6146103af5780636896b999146103c4578063699e75461461043f5780636b08f2ef146104545780636d7bd3fc146104cb57806379ba5097146104e05780637b103999146104f55780638077ccf71461050a57806383315b6e1461053f57806389e63a60146105545780638da5cb5b1461056c5780639232494e146105815780639249993a1461059657806392d1abb7146105ab57806398e95740146105c0578063a91ee0dc146105d5578063b1e9932b146105f6578063b406d38614610661578063c4a8598e146106de578063c52173de146106f3578063c7ba24bc14610752578063c98fefed146107b0578063cc97b38f1461080e578063d4ee1d9014610823578063f2fde38b14610838578063f3898a9714610859578063f5286b9c146108aa575b600080fd5b3480156101c457600080fd5b506101de600160a060020a036004351660243515156108bf565b005b3480156101ec57600080fd5b506101de600160a060020a0360043516610930565b34801561020d57600080fd5b50604080516020600480358082013583810280860185019096528085526102589536959394602494938501929182918501908490808284375094975050933594506109a59350505050565b6040805192835260208301919091528051918290030190f35b34801561027d57600080fd5b50610286611170565b60408051918252519081900360200190f35b604080516020600480358082013583810280860185019096528085526102869536959394602494938501929182918501908490808284375094975050843595505050602083013592600160a060020a0360408201351692506060810135915060808101359060ff60a0820135169060c08101359060e00135611194565b34801561032157600080fd5b506102866111b5565b34801561033657600080fd5b506102866111d9565b34801561034b57600080fd5b506102866111fd565b34801561036057600080fd5b50610369611221565b60408051600160a060020a039092168252519081900360200190f35b34801561039157600080fd5b506101de600160a060020a0360043581169060243516604435611230565b3480156103bb57600080fd5b5061028661130d565b604080516020600480358082013583810280860185019096528085526102869536959394602494938501929182918501908490808284375094975050843595505050602083013592604081013592506060810135915060808101359060a08101359060ff60c0820135169060e0810135906101000135611331565b34801561044b57600080fd5b506102586114a6565b604080516020600480358082013583810280860185019096528085526102869536959394602494938501929182918501908490808284375094975050843595505050602083013592600160a060020a0360408201351692506060810135915060ff6080820135169060a08101359060c001356114cb565b3480156104d757600080fd5b506102866114eb565b3480156104ec57600080fd5b506101de61150f565b34801561050157600080fd5b50610369611597565b34801561051657600080fd5b5061052b600160a060020a03600435166115a6565b604080519115158252519081900360200190f35b34801561054b57600080fd5b506102866115bb565b34801561056057600080fd5b5061052b6004356115df565b34801561057857600080fd5b506103696115f4565b34801561058d57600080fd5b50610286611603565b3480156105a257600080fd5b50610286611627565b3480156105b757600080fd5b5061028661164b565b3480156105cc57600080fd5b50610258611650565b3480156105e157600080fd5b506101de600160a060020a036004351661166d565b34801561060257600080fd5b5060408051602060048035808201358381028086018501909652808552610286953695939460249493850192918291850190849080828437509497505084359550505060208301359260400135600160a060020a031691506116e29050565b604080516020600480358082013583810280860185019096528085526102869536959394602494938501929182918501908490808284375094975050843595505050602083013592600160a060020a0360408201351692506060810135915060808101359060ff60a0820135169060c08101359060e00135611722565b3480156106ea57600080fd5b506102866117fd565b604080516020600480358082013583810280860185019096528085526102869536959394602494938501929182918501908490808284375094975050843595505050602083013592604081013592506060810135915060800135611821565b34801561075e57600080fd5b5060408051602060048035808201358381028086018501909652808552610286953695939460249493850192918291850190849080828437509497505084359550505060209092013591506118409050565b60408051602060048035808201358381028086018501909652808552610286953695939460249493850192918291850190849080828437509497505084359550505060208301359260400135600160a060020a031691506118569050565b34801561081a57600080fd5b50610286611872565b34801561082f57600080fd5b50610369611896565b34801561084457600080fd5b506101de600160a060020a03600435166118a5565b60408051602060048035808201358381028086018501909652808552610286953695939460249493850192918291850190849080828437509497505084359550505060209092013591506119069050565b3480156108b657600080fd5b50610286611914565b600054600160a060020a031633146108d657600080fd5b81600160a060020a03811615156108ec57600080fd5b82600160a060020a03811630141561090357600080fd5b5050600160a060020a03919091166000908152600460205260409020805460ff1916911515919091179055565b600054600160a060020a0316331461094757600080fd5b80600160a060020a038116151561095d57600080fd5b81600160a060020a03811630141561097457600080fd5b50506002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600080600080600080600080600080600080600080600360009054906101000a9004600160a060020a0316600160a060020a03166321f8a7217f42616e636f72466f726d756c61000000000000000000000000000000000000006040518263ffffffff1660e060020a028152600401808260001916600019168152602001915050602060405180830381600087803b158015610a4057600080fd5b505af1158015610a54573d6000803e3d6000fd5b505050506040513d6020811015610a6a57600080fd5b810190808051906020019092919050505091508e97508f6000815181101515610a8f57fe5b906020019060200201519b50600190505b8f5181101561115a578f81815181101515610ab757fe5b906020019060200201519a508f81600101815181101515610ad457fe5b9060200190602002015199508a600160a060020a0316638da5cb5b6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610b1e57600080fd5b505af1158015610b32573d6000803e3d6000fd5b505050506040513d6020811015610b4857600080fd5b50519850600160a060020a038a8116908c161415610e6e5782600160a060020a03168b600160a060020a031614610be8578a600160a060020a03166318160ddd6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610bb757600080fd5b505af1158015610bcb573d6000803e3d6000fd5b505050506040513d6020811015610be157600080fd5b5051610bea565b855b9550610bf6898d611938565b1515610c0157600080fd5b88600160a060020a031663d89595128d6040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b158015610c5c57600080fd5b505af1158015610c70573d6000803e3d6000fd5b505050506040513d6020811015610c8657600080fd5b50519450610c94898d6119d7565b604080517f29a00e7c000000000000000000000000000000000000000000000000000000008152600481018990526024810188905263ffffffff83166044820152606481018b90529051919550600160a060020a038416916329a00e7c916084808201926020929091908290030181600087803b158015610d1457600080fd5b505af1158015610d28573d6000803e3d6000fd5b505050506040513d6020811015610d3e57600080fd5b5051604080517f579cd3ca0000000000000000000000000000000000000000000000000000000081529051919950610df491620f424091610de891600160a060020a038e169163579cd3ca9160048083019260209291908290030181600087803b158015610dab57600080fd5b505af1158015610dbf573d6000803e3d6000fd5b505050506040513d6020811015610dd557600080fd5b50518b9063ffffffff90811690611a7616565b9063ffffffff611aaf16565b96508688039750878b600160a060020a03166318160ddd6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610e3a57600080fd5b505af1158015610e4e573d6000803e3d6000fd5b505050506040513d6020811015610e6457600080fd5b505101955061114a565b8a600160a060020a03168c600160a060020a031614156111385782600160a060020a03168b600160a060020a031614610f10578a600160a060020a03166318160ddd6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610edf57600080fd5b505af1158015610ef3573d6000803e3d6000fd5b505050506040513d6020811015610f0957600080fd5b5051610f12565b855b955088600160a060020a031663d89595128b6040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b158015610f6f57600080fd5b505af1158015610f83573d6000803e3d6000fd5b505050506040513d6020811015610f9957600080fd5b50519450610fa7898b6119d7565b604080517f49f9b0f7000000000000000000000000000000000000000000000000000000008152600481018990526024810188905263ffffffff83166044820152606481018b90529051919550600160a060020a038416916349f9b0f7916084808201926020929091908290030181600087803b15801561102757600080fd5b505af115801561103b573d6000803e3d6000fd5b505050506040513d602081101561105157600080fd5b5051604080517f579cd3ca00000000000000000000000000000000000000000000000000000000815290519199506110be91620f424091610de891600160a060020a038e169163579cd3ca9160048083019260209291908290030181600087803b158015610dab57600080fd5b96508688039750878b600160a060020a03166318160ddd6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561110457600080fd5b505af1158015611118573d6000803e3d6000fd5b505050506040513d602081101561112e57600080fd5b505103955061114a565b611144898d8c8b611ad2565b90985096505b989a508a988a9250600201610aa0565b50959e949d50939b505050505050505050505050565b7f42616e636f72436f6e766572746572557067726164657200000000000000000081565b60006111a78a8a8a8a8d8b8a8a8a611722565b9a9950505050505050505050565b7f424e54546f6b656e00000000000000000000000000000000000000000000000081565b7f436f6e747261637452656769737472790000000000000000000000000000000081565b7f42616e636f72436f6e766572746572466163746f72790000000000000000000081565b600254600160a060020a031681565b600054600160a060020a0316331461124757600080fd5b82600160a060020a038116151561125d57600080fd5b82600160a060020a038116151561127357600080fd5b83600160a060020a03811630141561128a57600080fd5b85600160a060020a031663a9059cbb86866040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b1580156112ed57600080fd5b505af1158015611301573d6000803e3d6000fd5b50505050505050505050565b7f424e54436f6e766572746572000000000000000000000000000000000000000081565b6000806113428c8c88888888611bee565b6113678c8c8c8f600081518110151561135757fe5b9060200190602002015130611f20565b6003546040805160e260020a632ecd14d30281527f42616e636f72580000000000000000000000000000000000000000000000000060048201529051929450600160a060020a03909116925063bb34534c9160248083019260209291908290030181600087803b1580156113da57600080fd5b505af11580156113ee573d6000803e3d6000fd5b505050506040513d602081101561140457600080fd5b5051604080517f427c0374000000000000000000000000000000000000000000000000000000008152600481018c9052602481018b905260448101849052606481018a90529051600160a060020a039092169163427c03749160848082019260009290919082900301818387803b15801561147e57600080fd5b505af1158015611492573d6000803e3d6000fd5b50929e9d5050505050505050505050505050565b60075460009081906114c390600160a060020a0316828080611ad2565b915091509091565b60006114de898989898c8a8a8a8a611722565b9998505050505050505050565b7f42616e636f72466f726d756c610000000000000000000000000000000000000081565b600154600160a060020a0316331461152657600080fd5b60015460008054604051600160a060020a0393841693909116917f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a91a3600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600354600160a060020a031681565b60046020526000908152604090205460ff1681565b7f436f6e747261637446656174757265730000000000000000000000000000000081565b60056020526000908152604090205460ff1681565b600054600160a060020a031681565b7f42616e636f724e6574776f726b0000000000000000000000000000000000000081565b7f42616e636f7247617350726963654c696d69740000000000000000000000000081565b600181565b60065460009081906114c390600160a060020a0316828080611ad2565b600054600160a060020a0316331461168457600080fd5b80600160a060020a038116151561169a57600080fd5b81600160a060020a0381163014156116b157600080fd5b50506003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000808560008151811015156116f457fe5b90602001906020020151905061170c8133308861218f565b61171886868686611856565b9695505050505050565b6000808a600081518110151561173457fe5b90602001906020020151905034600014806117715750348a1480156117715750600160a060020a03811660009081526004602052604090205460ff165b151561177c57600080fd5b60003411156117dd5780600160a060020a031663d0e30db0346040518263ffffffff1660e060020a0281526004016000604051808303818588803b1580156117c357600080fd5b505af11580156117d7573d6000803e3d6000fd5b50505050505b6117ee8b8b8b8b8b8b8b8b8b612527565b9b9a5050505050505050505050565b7f42616e636f72580000000000000000000000000000000000000000000000000081565b600061183587878787878787808080611331565b979650505050505050565b600061184e848484336116e2565b949350505050565b6000611869858585858286808080611722565b95945050505050565b7f42616e636f72585570677261646572000000000000000000000000000000000081565b600154600160a060020a031681565b600054600160a060020a031633146118bc57600080fd5b600054600160a060020a03828116911614156118d757600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600061184e84848433611856565b7f4e6f6e5374616e64617264546f6b656e5265676973747279000000000000000081565b60008060008060008087600160a060020a0316630e53aae9886040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a0316815260200191505060a060405180830381600087803b15801561199c57600080fd5b505af11580156119b0573d6000803e3d6000fd5b505050506040513d60a08110156119c657600080fd5b506060015198975050505050505050565b60008060008060008087600160a060020a0316630e53aae9886040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a0316815260200191505060a060405180830381600087803b158015611a3b57600080fd5b505af1158015611a4f573d6000803e3d6000fd5b505050506040513d60a0811015611a6557600080fd5b506020015198975050505050505050565b600080831515611a895760009150611aa8565b50828202828482811515611a9957fe5b0414611aa457600080fd5b8091505b5092915050565b600080808311611abe57600080fd5b8284811515611ac957fe5b04949350505050565b600080611add6131d1565b604080517f67657452657475726e28616464726573732c616464726573732c75696e74323581527f36290000000000000000000000000000000000000000000000000000000000006020808301919091528251918290036022018220600160a060020a03808b166024850152891660448401526064808401899052845180850390910181526084909301845290820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000060e060020a9384900490930292909216919091178152815191929184918b5afa1515611bd857600080fd5b5080516020909101519097909650945050505050565b6000808760028151118015611c0557506015815111155b8015611c1657508051600290066001145b1515611c2157600080fd5b886000815181101515611c3057fe5b9060200190602002015192503460001480611c6d57503488148015611c6d5750600160a060020a03831660009081526004602052604090205460ff165b1515611c7857600080fd5b6003546040805160e260020a632ecd14d30281527f424e54546f6b656e00000000000000000000000000000000000000000000000060048201529051600160a060020a039092169163bb34534c916024808201926020929091908290030181600087803b158015611ce857600080fd5b505af1158015611cfc573d6000803e3d6000fd5b505050506040513d6020811015611d1257600080fd5b50518951600160a060020a03909116908a906000198101908110611d3257fe5b60209081029091010151600160a060020a031614611d4f57600080fd5b6000341115611db45782600160a060020a031663d0e30db0346040518263ffffffff1660e060020a0281526004016000604051808303818588803b158015611d9657600080fd5b505af1158015611daa573d6000803e3d6000fd5b5050505050611dc0565b611dc08333308b61218f565b60ff8616158015611dcf575084155b8015611dd9575083155b15611efb576003546040805160e260020a632ecd14d30281527f42616e636f7247617350726963654c696d69740000000000000000000000000060048201529051600160a060020a039092169163bb34534c916024808201926020929091908290030181600087803b158015611e4e57600080fd5b505af1158015611e62573d6000803e3d6000fd5b505050506040513d6020811015611e7857600080fd5b5051604080517f6b4dff1f0000000000000000000000000000000000000000000000000000000081523a60048201529051919350600160a060020a03841691636b4dff1f9160248082019260009290919082900301818387803b158015611ede57600080fd5b505af1158015611ef2573d6000803e3d6000fd5b50505050611f15565b611f0a898989338a8a8a61279e565b1515611f1557600080fd5b505050505050505050565b6003546040805160e260020a632ecd14d30281527f436f6e7472616374466561747572657300000000000000000000000000000000600482015290516000928392839283928392839283928392600160a060020a039091169163bb34534c9160248082019260209290919082900301818787803b158015611fa057600080fd5b505af1158015611fb4573d6000803e3d6000fd5b505050506040513d6020811015611fca57600080fd5b50518d519093509150600190505b8181101561217e578c81815181101515611fee57fe5b9060200190602002015195508c8160010181518110151561200b57fe5b90602001906020020151945085600160a060020a0316638da5cb5b6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561205557600080fd5b505af1158015612069573d6000803e3d6000fd5b505050506040513d602081101561207f57600080fd5b5051935061208e848a85612a5d565b600160a060020a03868116908b16146120ac576120ac8a858e612c19565b83600160a060020a0316635e5144eb8b878f6002870386146120cf5760016120d1565b8f5b6040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184600160a060020a0316600160a060020a03168152602001838152602001828152602001945050505050602060405180830381600087803b15801561214357600080fd5b505af1158015612157573d6000803e3d6000fd5b505050506040513d602081101561216d57600080fd5b50519b509398508893600201611fd8565b50929b999a50505050505050505050565b6003546040805160e260020a632ecd14d30281527f4e6f6e5374616e64617264546f6b656e526567697374727900000000000000006004820152905160009283928392600160a060020a039092169163bb34534c9160248082019260209290919082900301818787803b15801561220557600080fd5b505af1158015612219573d6000803e3d6000fd5b505050506040513d602081101561222f57600080fd5b5051604080517faeea10bd000000000000000000000000000000000000000000000000000000008152600160a060020a038a8116600483015291519295509085169163aeea10bd916024808201926020929091908290030181600087803b15801561229957600080fd5b505af11580156122ad573d6000803e3d6000fd5b505050506040513d60208110156122c357600080fd5b5051156124765786600160a060020a03166370a08231866040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b15801561232557600080fd5b505af1158015612339573d6000803e3d6000fd5b505050506040513d602081101561234f57600080fd5b5051604080517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a0389811660048301528881166024830152604482018890529151929450908916916323b872dd9160648082019260009290919082900301818387803b1580156123c757600080fd5b505af11580156123db573d6000803e3d6000fd5b5050505086600160a060020a03166370a08231866040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b15801561243a57600080fd5b505af115801561244e573d6000803e3d6000fd5b505050506040513d602081101561246457600080fd5b5051905081811161247157fe5b61251e565b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a0388811660048301528781166024830152604482018790529151918916916323b872dd916064808201926020929091908290030181600087803b1580156124ea57600080fd5b505af11580156124fe573d6000803e3d6000fd5b505050506040513d602081101561251457600080fd5b5051151561251e57fe5b50505050505050565b6000806000808c6002815111801561254157506015815111155b801561255257508051600290066001145b151561255d57600080fd5b60ff881615801561256c575086155b8015612576575085155b15612698576003546040805160e260020a632ecd14d30281527f42616e636f7247617350726963654c696d69740000000000000000000000000060048201529051600160a060020a039092169163bb34534c916024808201926020929091908290030181600087803b1580156125eb57600080fd5b505af11580156125ff573d6000803e3d6000fd5b505050506040513d602081101561261557600080fd5b5051604080517f6b4dff1f0000000000000000000000000000000000000000000000000000000081523a60048201529051919550600160a060020a03861691636b4dff1f9160248082019260009290919082900301818387803b15801561267b57600080fd5b505af115801561268f573d6000803e3d6000fd5b505050506126b2565b6126a78e8b8b8e8c8c8c61279e565b15156126b257600080fd5b8d60008151811015156126c157fe5b9060200190602002015192506126da8e8e8e868f611f20565b600160a060020a038216600090815260046020526040902054909e5090925060ff16156127815781600160a060020a031663205c28788c8f6040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b15801561276457600080fd5b505af1158015612778573d6000803e3d6000fd5b5050505061278c565b61278c828c8f612e53565b509a9c9b505050505050505050505050565b600080600080883a89338d8f6040516020018087815260200186815260200185600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140184600160a060020a0316600160a060020a03166c01000000000000000000000000028152601401838152602001828051906020019060200280838360005b8381101561283a578181015183820152602001612822565b5050505090500196505050505050506040516020818303038152906040526040518082805190602001908083835b602083106128875780518252601f199092019160209182019101612868565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912060008181526005909252929020549196505060ff161591505080156128d45750884311155b15156128df57600080fd5b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c80830187905283518084039091018152605c90920192839052815191929182918401908083835b602083106129555780518252601f199092019160209182019101612936565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209150600260009054906101000a9004600160a060020a0316600160a060020a0316600183898989604051600081526020016040526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af1158015612a1a573d6000803e3d6000fd5b50505060206040510351600160a060020a031614905080156111a7576000838152600560205260409020805460ff191660011790559a9950505050505050505050565b604080517fa5fbf287000000000000000000000000000000000000000000000000000000008152600160a060020a03858116600483015260016024830152915160009284169163a5fbf28791604480830192602092919082900301818787803b158015612ac957600080fd5b505af1158015612add573d6000803e3d6000fd5b505050506040513d6020811015612af357600080fd5b50511515612b0057612c13565b83600160a060020a031663c45d3d926040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015612b3e57600080fd5b505af1158015612b52573d6000803e3d6000fd5b505050506040513d6020811015612b6857600080fd5b50519050600160a060020a0381161515612b8157612c13565b80600160a060020a0316633af32abf846040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b158015612bdc57600080fd5b505af1158015612bf0573d6000803e3d6000fd5b505050506040513d6020811015612c0657600080fd5b50511515612c1357600080fd5b50505050565b604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a0384811660248301529151839286169163dd62ed3e9160448083019260209291908290030181600087803b158015612c8457600080fd5b505af1158015612c98573d6000803e3d6000fd5b505050506040513d6020811015612cae57600080fd5b505110612cba57612e4e565b604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a03848116602483015291519185169163dd62ed3e916044808201926020929091908290030181600087803b158015612d2557600080fd5b505af1158015612d39573d6000803e3d6000fd5b505050506040513d6020811015612d4f57600080fd5b505115612dd757604080517f095ea7b3000000000000000000000000000000000000000000000000000000008152600160a060020a03848116600483015260006024830181905292519086169263095ea7b3926044808201939182900301818387803b158015612dbe57600080fd5b505af1158015612dd2573d6000803e3d6000fd5b505050505b82600160a060020a031663095ea7b383836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b158015612e3a57600080fd5b505af115801561251e573d6000803e3d6000fd5b505050565b6003546040805160e260020a632ecd14d30281527f4e6f6e5374616e64617264546f6b656e526567697374727900000000000000006004820152905160009283928392600160a060020a039092169163bb34534c9160248082019260209290919082900301818787803b158015612ec957600080fd5b505af1158015612edd573d6000803e3d6000fd5b505050506040513d6020811015612ef357600080fd5b5051604080517faeea10bd000000000000000000000000000000000000000000000000000000008152600160a060020a03898116600483015291519295509085169163aeea10bd916024808201926020929091908290030181600087803b158015612f5d57600080fd5b505af1158015612f71573d6000803e3d6000fd5b505050506040513d6020811015612f8757600080fd5b5051156131325785600160a060020a03166370a08231866040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b158015612fe957600080fd5b505af1158015612ffd573d6000803e3d6000fd5b505050506040513d602081101561301357600080fd5b5051604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0388811660048301526024820188905291519294509088169163a9059cbb9160448082019260009290919082900301818387803b15801561308357600080fd5b505af1158015613097573d6000803e3d6000fd5b5050505085600160a060020a03166370a08231866040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b1580156130f657600080fd5b505af115801561310a573d6000803e3d6000fd5b505050506040513d602081101561312057600080fd5b5051905081811161312d57fe5b6131c9565b85600160a060020a031663a9059cbb86866040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561319557600080fd5b505af11580156131a9573d6000803e3d6000fd5b505050506040513d60208110156131bf57600080fd5b505115156131c957fe5b505050505050565b604080518082018252906002908290803883395091929150505600a165627a7a7230582063f397d618580da9541b709a956a4f1157a24a03955bbe1803451fe24dd7930f0029",
  "sourceMap": "816:741:25:-;;;1958:34:2;;;-1:-1:-1;;;;;;1958:34:2;;;969:232:25;5:2:-1;;;;30:1;27;20:12;5:2;969:232:25;;;;;;;;;;;;;;;;;;;361:5:45;:18;;369:10;-1:-1:-1;;;;;;361:18:45;;;;;;;2566:8:2;:20;;;;;-1:-1:-1;2566:20:2;;;969:232:25;1095:31;;:::i;:::-;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;1074:18:25;:52;;-1:-1:-1;;;;;;1074:52:25;-1:-1:-1;;;;;1074:52:25;;;;;;;;;;1180:7;1189:4;1157:37;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1157:37:25;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;1136:18:25;:58;;-1:-1:-1;;;;;;1136:58:25;-1:-1:-1;;;;;1136:58:25;;;;;;;;;;-1:-1:-1;816:741:25;;-1:-1:-1;816:741:25;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "816:741:25:-;;;;;;;;;-1:-1:-1;;;816:741:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3776:202:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3776:202:2;-1:-1:-1;;;;;3776:202:2;;;;;;;;;;;3362:203;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3362:203:2;-1:-1:-1;;;;;3362:203:2;;;;;20677:2768;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;20677:2768:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20677:2768:2;;-1:-1:-1;;20677:2768:2;;;-1:-1:-1;20677:2768:2;;-1:-1:-1;;;;20677:2768:2;;;;;;;;;;;;;;;;;;;;;;;;643:77:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;643:77:3;;;;;;;;;;;;;;;;;;;;32322:412:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;32322:412:2;;-1:-1:-1;;32322:412:2;;;-1:-1:-1;;;32322:412:2;;;;;-1:-1:-1;;;;;32322:412:2;;;;;;-1:-1:-1;32322:412:2;;;;;-1:-1:-1;32322:412:2;;;;;;;;;;;;;;;;;;;;;;824:46:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;824:46:3;;;;268:62;;8:9:-1;5:2;;;30:1;27;20:12;5:2;268:62:3;;;;726:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;726:75:3;;;;1958:34:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1958:34:2;;;;;;;;-1:-1:-1;;;;;1958:34:2;;;;;;;;;;;;;;1182:252:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1182:252:47;-1:-1:-1;;;;;1182:252:47;;;;;;;;;;;;876:54:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;876:54:3;;;;13653:883:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13653:883:2;;-1:-1:-1;;13653:883:2;;;-1:-1:-1;;;13653:883:2;;;;;;;;;;-1:-1:-1;13653:883:2;;;;;-1:-1:-1;13653:883:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1384:171:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1384:171:25;;;;31880:394:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;31880:394:2;;-1:-1:-1;;31880:394:2;;;-1:-1:-1;;;31880:394:2;;;;;-1:-1:-1;;;;;31880:394:2;;;;;;-1:-1:-1;31880:394:2;;;;;-1:-1:-1;31880:394:2;;;;;;;;;;;;;;;;;505:56:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;505:56:3;;;;963:182:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;963:182:45;;;;2072:33:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2072:33:2;;;;2159:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2159:44:2;-1:-1:-1;;;;;2159:44:2;;;;;;;;;;;;;;;;;;;;;;;200:62:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;200:62:3;;;;2253:49:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2253:49:2;;;;;155:20:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;155:20:45;;;;443:56:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;443:56:3;;;;567:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;567:70:3;;;;251:63:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;251:63:4;;;;1207:171:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1207:171:25;;;;3047:183:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3047:183:2;-1:-1:-1;;;;;3047:183:2;;;;;25177:540;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;25177:540:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25177:540:2;;-1:-1:-1;;25177:540:2;;;-1:-1:-1;;;25177:540:2;;;;;;;;-1:-1:-1;;;;;25177:540:2;;-1:-1:-1;25177:540:2;;-1:-1:-1;25177:540:2;9882:923;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9882:923:2;;-1:-1:-1;;9882:923:2;;;-1:-1:-1;;;9882:923:2;;;;;-1:-1:-1;;;;;9882:923:2;;;;;;-1:-1:-1;9882:923:2;;;;;-1:-1:-1;9882:923:2;;;;;;;;;;;;;;;;;;;;;;952:44:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;952:44:3;;;;11733:376:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11733:376:2;;-1:-1:-1;;11733:376:2;;;-1:-1:-1;;;11733:376:2;;;;;;;;;;-1:-1:-1;11733:376:2;;;;;-1:-1:-1;11733:376:2;;;;;27102:190;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;27102:190:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27102:190:2;;-1:-1:-1;;27102:190:2;;;-1:-1:-1;;;27102:190:2;;;;;;-1:-1:-1;27102:190:2;;-1:-1:-1;27102:190:2;8273:234;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8273:234:2;;-1:-1:-1;;8273:234:2;;;-1:-1:-1;;;8273:234:2;;;;;;;;-1:-1:-1;;;;;8273:234:2;;-1:-1:-1;8273:234:2;;-1:-1:-1;8273:234:2;1002:61:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1002:61:3;;;;181:23:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;181:23:45;;;;740:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;740:137:45;-1:-1:-1;;;;;740:137:45;;;;;26316:182:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26316:182:2;;-1:-1:-1;;26316:182:2;;;-1:-1:-1;;;26316:182:2;;;;;;-1:-1:-1;26316:182:2;;-1:-1:-1;26316:182:2;336:80:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;336:80:3;;;;3776:202:2;485:5:45;;-1:-1:-1;;;;;485:5:45;471:10;:19;463:28;;;;;;3894:6:2;-1:-1:-1;;;;;432:22:48;;;;424:31;;;;;;3918:6:2;-1:-1:-1;;;;;605:25:48;;625:4;605:25;;597:34;;;;;;-1:-1:-1;;;;;;;3940:19:2;;;;;;;;:11;:19;;;;;:31;;-1:-1:-1;;3940:31:2;;;;;;;;;;3776:202::o;3362:203::-;485:5:45;;-1:-1:-1;;;;;485:5:45;471:10;:19;463:28;;;;;;3466:14:2;-1:-1:-1;;;;;432:22:48;;;;424:31;;;;;;3498:14:2;-1:-1:-1;;;;;605:25:48;;625:4;605:25;;597:34;;;;;;-1:-1:-1;;3528:13:2;:30;;-1:-1:-1;;3528:30:2;-1:-1:-1;;;;;3528:30:2;;;;;;;;;;3362:203::o;20677:2768::-;20761:7;20770;20789:21;20820:22;20853:19;20882:26;20918:14;20942:11;20963:14;20987:15;21012:13;21035:26;21071:22;21276:9;21111:8;;;;;;;;;-1:-1:-1;;;;;21111:8:2;-1:-1:-1;;;;;21111:19:2;;21131:26;21111:47;;;;;-1:-1:-1;;;21111:47:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21111:47:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21111:47:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;21111:47:2;;;;;;;;;;;;;;;;21071:88;;21179:7;21170:16;;21208:5;21214:1;21208:8;;;;;;;;;;;;;;;;;;21196:20;;21288:1;21276:13;;21271:2137;21295:5;:12;21291:1;:16;21271:2137;;;21356:5;21362:1;21356:8;;;;;;;;;;;;;;;;;;21331:34;;21389:5;21395:1;21399;21395:5;21389:12;;;;;;;;;;;;;;;;;;21379:22;;21444:10;-1:-1:-1;;;;;21444:16:2;;:18;;;;;-1:-1:-1;;;21444:18:2;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21444:18:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21444:18:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;21444:18:2;;-1:-1:-1;;;;;;21482:21:2;;;;;;;21478:1845;;;21666:14;-1:-1:-1;;;;;21652:28:2;:10;-1:-1:-1;;;;;21652:28:2;;:64;;21692:10;-1:-1:-1;;;;;21692:22:2;;:24;;;;;-1:-1:-1;;;21692:24:2;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21692:24:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21692:24:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;21692:24:2;21652:64;;;21683:6;21652:64;21643:73;;21777:45;21801:9;21812;21777:23;:45::i;:::-;21769:54;;;;;;;;21913:9;-1:-1:-1;;;;;21913:29:2;;21943:9;21913:40;;;;;-1:-1:-1;;;21913:40:2;;;;;;;-1:-1:-1;;;;;21913:40:2;-1:-1:-1;;;;;21913:40:2;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21913:40:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21913:40:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;21913:40:2;;-1:-1:-1;21980:40:2;21999:9;22010;21980:18;:40::i;:::-;22047:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21971:49;;-1:-1:-1;;;;;;22047:31:2;;;;;:64;;;;;;;;;;;;;;;-1:-1:-1;22047:31:2;:64;;;5:2:-1;;;;30:1;27;20:12;5:2;22047:64:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22047:64:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;22047:64:2;22146:25;;;;;;;;22047:64;;-1:-1:-1;22135:61:2;;1944:7;;22135:37;;-1:-1:-1;;;;;22146:23:2;;;;;:25;;;;;22047:64;;22146:25;;;;;;;;:23;:25;;;5:2:-1;;;;30:1;27;20:12;5:2;22146:25:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22146:25:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;22146:25:2;22135:6;;:37;;;;;:10;:37;:::i;:::-;:41;:61;:41;:61;:::i;:::-;22129:67;;22224:3;22214:13;;;;22354:6;22327:10;-1:-1:-1;;;;;22327:22:2;;:24;;;;;-1:-1:-1;;;22327:24:2;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22327:24:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22327:24:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;22327:24:2;:33;;-1:-1:-1;21478:1845:2;;;22410:10;-1:-1:-1;;;;;22397:23:2;:9;-1:-1:-1;;;;;22397:23:2;;22393:930;;;22584:14;-1:-1:-1;;;;;22570:28:2;:10;-1:-1:-1;;;;;22570:28:2;;:64;;22610:10;-1:-1:-1;;;;;22610:22:2;;:24;;;;;-1:-1:-1;;;22610:24:2;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22610:24:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22610:24:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;22610:24:2;22570:64;;;22601:6;22570:64;22561:73;;22724:9;-1:-1:-1;;;;;22724:29:2;;22754:7;22724:38;;;;;-1:-1:-1;;;22724:38:2;;;;;;;-1:-1:-1;;;;;22724:38:2;-1:-1:-1;;;;;22724:38:2;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22724:38:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22724:38:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;22724:38:2;;-1:-1:-1;22789:38:2;22808:9;22819:7;22789:18;:38::i;:::-;22854:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22780:47;;-1:-1:-1;;;;;;22854:27:2;;;;;:60;;;;;;;;;;;;;;;-1:-1:-1;22854:27:2;:60;;;5:2:-1;;;;30:1;27;20:12;5:2;22854:60:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22854:60:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;22854:60:2;22949:25;;;;;;;;22854:60;;-1:-1:-1;22938:61:2;;1944:7;;22938:37;;-1:-1:-1;;;;;22949:23:2;;;;;:25;;;;;22854:60;;22949:25;;;;;;;;:23;:25;;;5:2:-1;;;;30:1;27;20:12;22938:61:2;22932:67;;23027:3;23017:13;;;;23157:6;23130:10;-1:-1:-1;;;;;23130:22:2;;:24;;;;;-1:-1:-1;;;23130:24:2;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23130:24:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23130:24:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;23130:24:2;:33;;-1:-1:-1;22393:930:2;;;23260:48;23270:9;23281;23292:7;23301:6;23260:9;:48::i;:::-;23244:64;;-1:-1:-1;23244:64:2;-1:-1:-1;22393:930:2;23390:7;;-1:-1:-1;23390:7:2;;23354:10;;-1:-1:-1;21314:1:2;21309:6;21271:2137;;;-1:-1:-1;23426:6:2;;23434:3;;-1:-1:-1;20677:2768:2;;-1:-1:-1;;;;;;;;;;;;20677:2768:2:o;643:77:3:-;;;:::o;32322:412:2:-;32596:7;32642:85;32665:5;32672:7;32681:10;32693:4;32699:7;32708:6;32716:2;32720;32724;32642:22;:85::i;:::-;32635:92;32322:412;-1:-1:-1;;;;;;;;;;32322:412:2:o;824:46:3:-;;;:::o;268:62::-;;;:::o;726:75::-;;;:::o;1958:34:2:-;;;-1:-1:-1;;;;;1958:34:2;;:::o;1182:252:47:-;485:5:45;;-1:-1:-1;;;;;485:5:45;471:10;:19;463:28;;;;;;1310:6:47;-1:-1:-1;;;;;432:22:48;;;;424:31;;;;;;1339:3:47;-1:-1:-1;;;;;432:22:48;;;;424:31;;;;;;1360:3:47;-1:-1:-1;;;;;605:25:48;;625:4;605:25;;597:34;;;;;;1397:6:47;-1:-1:-1;;;;;1379:34:47;;1414:3;1419:7;1379:48;;;;;-1:-1:-1;;;1379:48:47;;;;;;;-1:-1:-1;;;;;1379:48:47;-1:-1:-1;;;;;1379:48:47;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1379:48:47;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1379:48:47;;;;465:1:48;;501::45;1182:252:47;;;:::o;876:54:3:-;;;:::o;13653:883:2:-;13983:7;14232:17;14108:55;14128:5;14135:7;14144:6;14152:2;14156;14160;14108:19;:55::i;:::-;14253:57;14267:5;14274:7;14283:10;14295:5;14301:1;14295:8;;;;;;;;;;;;;;;;;;14305:4;14253:13;:57::i;:::-;14405:8;;:40;;;-1:-1:-1;;;;;14405:40:2;;14424:20;14405:40;;;;;;14229:81;;-1:-1:-1;;;;;;14405:8:2;;;;-1:-1:-1;14405:18:2;;:40;;;;;;;;;;;;;;:8;;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;14405:40:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14405:40:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14405:40:2;14396:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14396:60:2;;;;;;:106;;;;;;;;;;;;;;;;:60;:106;;;5:2:-1;;;;30:1;27;20:12;5:2;14396:106:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;14520:9:2;;13653:883;-1:-1:-1;;;;;;;;;;;;;;13653:883:2:o;1384:171:25:-;1484:18;;1431:7;;;;1466:82;;-1:-1:-1;;;;;1484:18:25;1431:7;;;1466:9;:82::i;:::-;1459:89;;;;1384:171;;:::o;31880:394:2:-;32152:7;32182:85;32205:5;32212:7;32221:10;32233:4;32239:7;32248:6;32256:2;32260;32264;32182:22;:85::i;:::-;32175:92;31880:394;-1:-1:-1;;;;;;;;;31880:394:2:o;505:56:3:-;;;:::o;963:182:45:-;1029:8;;-1:-1:-1;;;;;1029:8:45;1015:10;:22;1007:31;;;;;;1072:8;;;1065:5;;1053:28;;-1:-1:-1;;;;;1072:8:45;;;;1065:5;;;;1053:28;;;1099:8;;;;1091:16;;-1:-1:-1;;1091:16:45;;;-1:-1:-1;;;;;1099:8:45;;1091:16;;;;1117:21;;;963:182::o;2072:33:2:-;;;-1:-1:-1;;;;;2072:33:2;;:::o;2159:44::-;;;;;;;;;;;;;;;:::o;200:62:3:-;;;:::o;2253:49:2:-;;;;;;;;;;;;;;;:::o;155:20:45:-;;;-1:-1:-1;;;;;155:20:45;;:::o;443:56:3:-;;;:::o;567:70::-;;;:::o;251:63:4:-;308:6;251:63;:::o;1207:171:25:-;1307:18;;1254:7;;;;1289:82;;-1:-1:-1;;;;;1307:18:25;1254:7;;;1289:9;:82::i;3047:183:2:-;485:5:45;;-1:-1:-1;;;;;485:5:45;471:10;:19;463:28;;;;;;3151:9:2;-1:-1:-1;;;;;432:22:48;;;;424:31;;;;;;3178:9:2;-1:-1:-1;;;;;605:25:48;;625:4;605:25;;597:34;;;;;;-1:-1:-1;;3203:8:2;:20;;-1:-1:-1;;3203:20:2;-1:-1:-1;;;;;3203:20:2;;;;;;;;;;3047:183::o;25177:540::-;25293:7;25551:21;25575:5;25581:1;25575:8;;;;;;;;;;;;;;;;;;25551:32;;25593:56;25612:9;25623:10;25635:4;25641:7;25593:18;:56::i;:::-;25666:44;25677:5;25684:7;25693:10;25705:4;25666:10;:44::i;:::-;25659:51;25177:540;-1:-1:-1;;;;;;25177:540:2:o;9882:923::-;10182:7;10334:21;10358:5;10364:1;10358:8;;;;;;;;;;;;;;;;;;10334:32;;10384:9;10397:1;10384:14;:66;;;;10414:9;10403:7;:20;:46;;;;-1:-1:-1;;;;;;10427:22:2;;;;;;:11;:22;;;;;;;;10403:46;10376:75;;;;;;;;10632:1;10620:9;:13;10616:80;;;10659:9;-1:-1:-1;;;;;10647:30:2;;10684:9;10647:49;;;;;-1:-1:-1;;;10647:49:2;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10647:49:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10647:49:2;;;;;10616:80;10714:84;10733:5;10740:7;10749:10;10761:4;10767:10;10779:6;10787:2;10791;10795;10714:18;:84::i;:::-;10707:91;9882:923;-1:-1:-1;;;;;;;;;;;9882:923:2:o;952:44:3:-;;;:::o;11733:376:2:-;11970:7;12000:102;12020:5;12027:7;12036:10;12048:13;12063:3;12068:13;11970:7;;;;12000:19;:102::i;:::-;11993:109;11733:376;-1:-1:-1;;;;;;;11733:376:2:o;27102:190::-;27201:7;27227:58;27246:5;27253:7;27262:10;27274;27227:18;:58::i;:::-;27220:65;27102:190;-1:-1:-1;;;;27102:190:2:o;8273:234::-;8389:7;8415:85;8438:5;8445:7;8454:10;8466:4;8445:7;8389;;;;8415:22;:85::i;:::-;8408:92;8273:234;-1:-1:-1;;;;;8273:234:2:o;1002:61:3:-;;;:::o;181:23:45:-;;;-1:-1:-1;;;;;181:23:45;;:::o;740:137::-;485:5;;-1:-1:-1;;;;;485:5:45;471:10;:19;463:28;;;;;;834:5;;-1:-1:-1;;;;;821:18:45;;;834:5;;821:18;;813:27;;;;;;850:8;:20;;-1:-1:-1;;850:20:45;-1:-1:-1;;;;;850:20:45;;;;;;;;;;740:137::o;26316:182:2:-;26415:7;26441:50;26452:5;26459:7;26468:10;26480;26441;:50::i;336:80:3:-;;;:::o;31395:437:2:-;31527:4;31547:22;31579:13;31602:28;31640:18;31668:10;31762;-1:-1:-1;;;;;31762:21:2;;31784:10;31762:33;;;;;-1:-1:-1;;;31762:33:2;;;;;;;-1:-1:-1;;;;;31762:33:2;-1:-1:-1;;;;;31762:33:2;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;31762:33:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;31762:33:2;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;31762:33:2;;;;31395:437;-1:-1:-1;;;;;;;;31395:437:2:o;30697:427::-;30824:6;30846:22;30878:13;30901:28;30939:18;30967:10;31061;-1:-1:-1;;;;;31061:21:2;;31083:10;31061:33;;;;;-1:-1:-1;;;31061:33:2;;;;;;;-1:-1:-1;;;;;31061:33:2;-1:-1:-1;;;;;31061:33:2;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;31061:33:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;31061:33:2;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;31061:33:2;;;;30697:427;-1:-1:-1;;;;;;;;30697:427:2:o;976:226:46:-;1036:7;;1087;;1083:33;;;1115:1;1108:8;;;;1083:33;-1:-1:-1;1139:7:46;;;1144:2;1139;:7;1164:6;;;;;;;;:12;1156:21;;;;;;1194:1;1187:8;;976:226;;;;;;:::o;1408:149::-;1468:7;;1495:6;;;1487:15;;;;;;1529:2;1524;:7;;;;;;;;;1408:149;-1:-1:-1;;;;1408:149:46:o;19201:1038:2:-;19313:7;19322;19341:21;;:::i;:::-;19128:47;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19392:79:2;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;19392:79:2;;;;;;25:18:-1;;;61:17;;19392:79:2;182:15:-1;19392:79:2;-1:-1:-1;;;19128:64:2;;;;19113:81;;;19392:79;;;;179:29:-1;;;;160:49;;19563:11:2;;19392:79;;19128:47;19576:3;;19541:5;19536:3;19525:59;19518:67;19515:2;;;19597:1;19594;19587:12;19515:2;-1:-1:-1;20217:6:2;;;20225;;;;20217;;20225;;-1:-1:-1;19201:1038:2;-1:-1:-1;;;;;19201:1038:2:o;6238:1359::-;6609:21;7303:34;6455:5;2803:1;2788:5;:12;:16;:48;;;;;2825:10;2808:5;:12;:28;;2788:48;:73;;;;-1:-1:-1;2840:12:2;;2855:1;;2840:16;2860:1;2840:21;2788:73;2780:82;;;;;;;;6633:5;6639:1;6633:8;;;;;;;;;;;;;;;;;;6609:32;;6659:9;6672:1;6659:14;:66;;;;6689:9;6678:7;:20;:46;;;;-1:-1:-1;;;;;;6702:22:2;;;;;;:11;:22;;;;;;;;6678:46;6651:75;;;;;;;;6818:8;;:41;;;-1:-1:-1;;;;;6818:41:2;;6837:21;6818:41;;;;;;-1:-1:-1;;;;;6818:8:2;;;;:18;;:41;;;;;;;;;;;;;;;:8;;:41;;;5:2:-1;;;;30:1;27;20:12;5:2;6818:41:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6818:41:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6818:41:2;6797:12;;-1:-1:-1;;;;;6791:68:2;;;;:5;;-1:-1:-1;;6797:16:2;;;6791:23;;;;;;;;;;;;;;;-1:-1:-1;;;;;6791:68:2;;6783:77;;;;;;7040:1;7028:9;:13;7024:180;;;7069:9;-1:-1:-1;;;;;7057:30:2;;7094:9;7057:49;;;;;-1:-1:-1;;;7057:49:2;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7057:49:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7057:49:2;;;;;7024:180;;;7137:56;7156:9;7167:10;7179:4;7185:7;7137:18;:56::i;:::-;7252:9;;;;:22;;;;-1:-1:-1;7265:9:2;;7252:22;:35;;;;-1:-1:-1;7278:9:2;;7252:35;7248:343;;;7361:8;;:54;;;-1:-1:-1;;;;;7361:54:2;;7380:34;7361:54;;;;;;-1:-1:-1;;;;;7361:8:2;;;;:18;;:54;;;;;;;;;;;;;;;:8;;:54;;;5:2:-1;;;;30:1;27;20:12;5:2;7361:54:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7361:54:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7361:54:2;7430:43;;;;;;7461:11;7430:43;;;;;;7361:54;;-1:-1:-1;;;;;;7430:30:2;;;;;:43;;;;;-1:-1:-1;;7430:43:2;;;;;;;;-1:-1:-1;7430:30:2;:43;;;5:2:-1;;;;30:1;27;20:12;5:2;7430:43:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7430:43:2;;;;7248:343;;;7512:67;7532:5;7539:7;7548:6;7556:10;7568:2;7572;7576;7512:19;:67::i;:::-;7504:76;;;;;;;;6238:1359;;;;;;;;;:::o;17693:1363::-;18115:8;;:49;;;-1:-1:-1;;;;;18115:49:2;;18134:29;18115:49;;;;;;17875:11;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18115:8:2;;;;:18;;:49;;;;;;;;;;;;;;;17875:11;18115:8;:49;;;5:2:-1;;;;30:1;27;20:12;5:2;18115:49:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18115:49:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18115:49:2;18241:12;;18115:49;;-1:-1:-1;18241:12:2;-1:-1:-1;18280:1:2;;-1:-1:-1;18263:752:2;18287:10;18283:1;:14;18263:752;;;18346:5;18352:1;18346:8;;;;;;;;;;;;;;;;;;18321:34;;18379:5;18385:1;18389;18385:5;18379:12;;;;;;;;;;;;;;;;;;18369:22;;18434:10;-1:-1:-1;;;;;18434:16:2;;:18;;;;;-1:-1:-1;;;18434:18:2;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18434:18:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18434:18:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18434:18:2;;-1:-1:-1;18467:41:2;18434:18;18493:4;18499:8;18467:14;:41::i;:::-;-1:-1:-1;;;;;18675:24:2;;;;;;;18671:93;;18717:47;18733:10;18745:9;18756:7;18717:15;:47::i;:::-;18886:9;-1:-1:-1;;;;;18886:16:2;;18903:10;18915:7;18924;18951:1;18938:10;:14;18933:1;:19;:36;;18968:1;18933:36;;;18955:10;18933:36;18886:84;;;;;-1:-1:-1;;;18886:84:2;;;;;;;-1:-1:-1;;;;;18886:84:2;-1:-1:-1;;;;;18886:84:2;;;;;;-1:-1:-1;;;;;18886:84:2;-1:-1:-1;;;;;18886:84:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18886:84:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18886:84:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18886:84:2;;-1:-1:-1;18997:7:2;;-1:-1:-1;18997:7:2;;18304:1;18299:6;18263:752;;;-1:-1:-1;19032:7:2;;19041;;-1:-1:-1;;;;;;;;;;17693:1363:2:o;28759:754::-;28910:8;;:59;;;-1:-1:-1;;;;;28910:59:2;;28929:39;28910:59;;;;;;28870:24;;;;;;-1:-1:-1;;;;;28910:8:2;;;;:18;;:59;;;;;;;;;;;;;;;28870:24;28910:8;:59;;;5:2:-1;;;;30:1;27;20:12;5:2;28910:59:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28910:59:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;28910:59:2;28985:35;;;;;;-1:-1:-1;;;;;28985:35:2;;;;;;;;;28910:59;;-1:-1:-1;28985:27:2;;;;;;:35;;;;;28910:59;;28985:35;;;;;;;;-1:-1:-1;28985:27:2;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;28985:35:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28985:35:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;28985:35:2;28981:526;;;29058:6;-1:-1:-1;;;;;29058:16:2;;29075:3;29058:21;;;;;-1:-1:-1;;;29058:21:2;;;;;;;-1:-1:-1;;;;;29058:21:2;-1:-1:-1;;;;;29058:21:2;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29058:21:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29058:21:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;29058:21:2;29185:59;;;;;;-1:-1:-1;;;;;29185:59:2;;;;;;;;;;;;;;;;;;;;;;29058:21;;-1:-1:-1;29185:38:2;;;;;;:59;;;;;-1:-1:-1;;29185:59:2;;;;;;;;-1:-1:-1;29185:38:2;:59;;;5:2:-1;;;;30:1;27;20:12;5:2;29185:59:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29185:59:2;;;;29280:6;-1:-1:-1;;;;;29280:16:2;;29297:3;29280:21;;;;;-1:-1:-1;;;29280:21:2;;;;;;;-1:-1:-1;;;;;29280:21:2;-1:-1:-1;;;;;29280:21:2;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29280:21:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29280:21:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;29280:21:2;;-1:-1:-1;29322:25:2;;;29315:33;;;;28981:526;;;29455:40;;;;;;-1:-1:-1;;;;;29455:40:2;;;;;;;;;;;;;;;;;;;;;;:19;;;;;;:40;;;;;;;;;;;;;;;-1:-1:-1;29455:19:2;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;29455:40:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29455:40:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;29455:40:2;29448:48;;;;;;28759:754;;;;;;;:::o;15637:1400::-;15959:7;16037:34;16469:21;16512:19;15935:5;2803:1;2788:5;:12;:16;:48;;;;;2825:10;2808:5;:12;:28;;2788:48;:73;;;;-1:-1:-1;2840:12:2;;2855:1;;2840:16;2860:1;2840:21;2788:73;2780:82;;;;;;;;15986:9;;;;:22;;;;-1:-1:-1;15999:9:2;;15986:22;:35;;;;-1:-1:-1;16012:9:2;;15986:35;15982:348;;;16095:8;;:54;;;-1:-1:-1;;;;;16095:54:2;;16114:34;16095:54;;;;;;-1:-1:-1;;;;;16095:8:2;;;;:18;;:54;;;;;;;;;;;;;;;:8;;:54;;;5:2:-1;;;;30:1;27;20:12;5:2;16095:54:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16095:54:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16095:54:2;16164:43;;;;;;16195:11;16164:43;;;;;;16095:54;;-1:-1:-1;;;;;;16164:30:2;;;;;:43;;;;;-1:-1:-1;;16164:43:2;;;;;;;;-1:-1:-1;16164:30:2;:43;;;5:2:-1;;;;30:1;27;20:12;5:2;16164:43:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16164:43:2;;;;15982:348;;;16254:64;16274:5;16281:10;16293:6;16301:4;16307:2;16311;16315;16254:19;:64::i;:::-;16246:73;;;;;;;;16493:5;16499:1;16493:8;;;;;;;;;;;;;;;;;;16469:32;;16571:58;16585:5;16592:7;16601:10;16613:9;16624:4;16571:13;:58::i;:::-;-1:-1:-1;;;;;16860:20:2;;;;;;:11;:20;;;;;;16550:79;;-1:-1:-1;16550:79:2;;-1:-1:-1;16860:20:2;;16856:149;;;16906:7;-1:-1:-1;;;;;16894:31:2;;16926:4;16932:7;16894:46;;;;;-1:-1:-1;;;16894:46:2;;;;;;;-1:-1:-1;;;;;16894:46:2;-1:-1:-1;;;;;16894:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16894:46:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16894:46:2;;;;16856:149;;;16967:38;16982:7;16991:4;16997:7;16967:14;:38::i;:::-;-1:-1:-1;17023:7:2;;15637:1400;-1:-1:-1;;;;;;;;;;;;15637:1400:2:o;4342:1076::-;4493:4;4509:12;5036:20;5138:13;4551:6;4559:11;4572:5;4579:10;4591;4603:5;4534:75;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4534:75:2;-1:-1:-1;;;;;4534:75:2;;;;;;;;-1:-1:-1;;;;;4534:75:2;-1:-1:-1;;;;;4534:75:2;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4534:75:2;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4534:75:2;;;4524:86;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;4524:86:2;;;;;;;;;;;;;-1:-1:-1;4847:22:2;;;:16;:22;;;;;;;4524:86;;-1:-1:-1;;4847:22:2;;4846:23;;-1:-1:-1;;4846:49:2;;;;;4889:6;4873:12;:22;;4846:49;4838:58;;;;;;;;5069;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;5069:58:2;;;;;;;;5059:69;;5069:58;;;;;5059:69;;;;5069:58;5059:69;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5059:69:2;;;;;;;;;;;;;;;;5036:92;;5193:13;;;;;;;;;-1:-1:-1;;;;;5193:13:2;-1:-1:-1;;;;;5154:52:2;:35;5164:12;5178:2;5182;5186;5154:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5154:35:2;;;;;;;;-1:-1:-1;;;;;5154:52:2;;5138:68;;5335:8;5331:55;;;5357:22;;;;:16;:22;;;;;:29;;-1:-1:-1;;5357:29:2;5382:4;5357:29;;;5403:8;4342:1076;-1:-1:-1;;;;;;;;;;4342:1076:2:o;23846:650::-;24077:76;;;;;;-1:-1:-1;;;;;24077:76:2;;;;;;;308:6:4;24077:76:2;;;;;;23965:20;;24077:21;;;;;:76;;;;;;;;;;;;;;23965:20;24077:21;:76;;;5:2:-1;;;;30:1;27;20:12;5:2;24077:76:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24077:76:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;24077:76:2;24076:77;24072:102;;;24167:7;;24072:102;24253:10;-1:-1:-1;;;;;24253:30:2;;:32;;;;;-1:-1:-1;;;24253:32:2;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24253:32:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24253:32:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;24253:32:2;;-1:-1:-1;;;;;;24299:23:2;;;24295:48;;;24336:7;;24295:48;24459:9;-1:-1:-1;;;;;24459:23:2;;24483:4;24459:29;;;;;-1:-1:-1;;;24459:29:2;;;;;;;-1:-1:-1;;;;;24459:29:2;-1:-1:-1;;;;;24459:29:2;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24459:29:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24459:29:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;24459:29:2;24451:38;;;;;;;;23846:650;;;;:::o;29961:512::-;30128:32;;;;;;30145:4;30128:32;;;;-1:-1:-1;;;;;30128:32:2;;;;;;;;;30164:6;;30128:16;;;;;:32;;;;;;;;;;;;;;-1:-1:-1;30128:16:2;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;30128:32:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30128:32:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;30128:32:2;:42;30124:67;;30184:7;;30124:67;30270:32;;;;;;30287:4;30270:32;;;;-1:-1:-1;;;;;30270:32:2;;;;;;;;;:16;;;;;;:32;;;;;;;;;;;;;;;-1:-1:-1;30270:16:2;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;30270:32:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30270:32:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;30270:32:2;:37;30266:101;;30321:46;;;;;;-1:-1:-1;;;;;30321:46:2;;;;;;;30365:1;30321:46;;;;;;;;:33;;;;;;:46;;;;;;;;;;;30365:1;30321:33;:46;;;5:2:-1;;;;30:1;27;20:12;5:2;30321:46:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30321:46:2;;;;30266:101;30433:6;-1:-1:-1;;;;;30415:33:2;;30449:8;30459:6;30415:51;;;;;-1:-1:-1;;;30415:51:2;;;;;;;-1:-1:-1;;;;;30415:51:2;-1:-1:-1;;;;;30415:51:2;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30415:51:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;29961:512:2;;;;:::o;27636:713::-;27768:8;;:59;;;-1:-1:-1;;;;;27768:59:2;;27787:39;27768:59;;;;;;27728:24;;;;;;-1:-1:-1;;;;;27768:8:2;;;;:18;;:59;;;;;;;;;;;;;;;27728:24;27768:8;:59;;;5:2:-1;;;;30:1;27;20:12;5:2;27768:59:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;27768:59:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;27768:59:2;27843:35;;;;;;-1:-1:-1;;;;;27843:35:2;;;;;;;;;27768:59;;-1:-1:-1;27843:27:2;;;;;;:35;;;;;27768:59;;27843:35;;;;;;;;-1:-1:-1;27843:27:2;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;27843:35:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;27843:35:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;27843:35:2;27839:504;;;27916:6;-1:-1:-1;;;;;27916:16:2;;27933:3;27916:21;;;;;-1:-1:-1;;;27916:21:2;;;;;;;-1:-1:-1;;;;;27916:21:2;-1:-1:-1;;;;;27916:21:2;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27916:21:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;27916:21:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;27916:21:2;28043:48;;;;;;-1:-1:-1;;;;;28043:48:2;;;;;;;;;;;;;;;27916:21;;-1:-1:-1;28043:34:2;;;;;;:48;;;;;-1:-1:-1;;28043:48:2;;;;;;;;-1:-1:-1;28043:34:2;:48;;;5:2:-1;;;;30:1;27;20:12;5:2;28043:48:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28043:48:2;;;;28127:6;-1:-1:-1;;;;;28127:16:2;;28144:3;28127:21;;;;;-1:-1:-1;;;28127:21:2;;;;;;;-1:-1:-1;;;;;28127:21:2;-1:-1:-1;;;;;28127:21:2;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28127:21:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28127:21:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;28127:21:2;;-1:-1:-1;28169:25:2;;;28162:33;;;;27839:504;;;28302:6;-1:-1:-1;;;;;28302:15:2;;28318:3;28323:7;28302:29;;;;;-1:-1:-1;;;28302:29:2;;;;;;;-1:-1:-1;;;;;28302:29:2;-1:-1:-1;;;;;28302:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28302:29:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28302:29:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;28302:29:2;28295:37;;;;;;27636:713;;;;;;:::o;816:741:25:-;;;;;;;;;;;;;;;105:10:-1;816:741:25;88:34:-1;-1:-1;816:741:25;;;-1:-1:-1;;816:741:25:o",
  "source": "pragma solidity ^0.4.24;\nimport '../BancorNetwork.sol';\n\ncontract OldBancorConverter {\n    uint256 private amount;\n\n    constructor(uint256 _amount) public {\n        amount = _amount;\n    }\n\n    function getReturn(IERC20Token _fromToken, IERC20Token _toToken, uint256 _amount) external view returns (uint256) {\n        _fromToken;\n        _toToken;\n        _amount;\n        return (amount);\n    }\n}\n\ncontract NewBancorConverter {\n    uint256 private amount;\n    uint256 private fee;\n\n    constructor(uint256 _amount, uint256 _fee) public {\n        amount = _amount;\n        fee = _fee;\n    }\n\n    function getReturn(IERC20Token _fromToken, IERC20Token _toToken, uint256 _amount) external view returns (uint256, uint256) {\n        _fromToken;\n        _toToken;\n        _amount;\n        return (amount, fee);\n    }\n}\n\ncontract TestBancorNetwork is BancorNetwork {\n    OldBancorConverter private oldBancorConverter;\n    NewBancorConverter private newBancorConverter;\n\n    constructor(uint256 _amount, uint256 _fee) public BancorNetwork(IContractRegistry(address(1))) {\n        oldBancorConverter = new OldBancorConverter(_amount);\n        newBancorConverter = new NewBancorConverter(_amount, _fee);\n    }\n\n    function getReturnOld() external view returns (uint256, uint256) {\n        return getReturn(address(oldBancorConverter), IERC20Token(0), IERC20Token(0), uint256(0));\n    }\n\n    function getReturnNew() external view returns (uint256, uint256) {\n        return getReturn(address(newBancorConverter), IERC20Token(0), IERC20Token(0), uint256(0));\n    }\n}\n",
  "sourcePath": "/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/helpers/TestBancorNetwork.sol",
  "ast": {
    "absolutePath": "/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/helpers/TestBancorNetwork.sol",
    "exportedSymbols": {
      "NewBancorConverter": [9814],
      "OldBancorConverter": [9769],
      "TestBancorNetwork": [9897]
    },
    "id": 9898,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9734,
        "literals": ["solidity", "^", "0.4", ".24"],
        "nodeType": "PragmaDirective",
        "src": "0:24:25"
      },
      {
        "absolutePath": "/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/BancorNetwork.sol",
        "file": "../BancorNetwork.sol",
        "id": 9735,
        "nodeType": "ImportDirective",
        "scope": 9898,
        "sourceUnit": 1989,
        "src": "25:30:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 9769,
        "linearizedBaseContracts": [9769],
        "name": "OldBancorConverter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9737,
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 9769,
            "src": "91:22:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9736,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "91:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 9746,
              "nodeType": "Block",
              "src": "156:33:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9742,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9737,
                      "src": "166:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9743,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9739,
                      "src": "175:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "166:16:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9745,
                  "nodeType": "ExpressionStatement",
                  "src": "166:16:25"
                }
              ]
            },
            "documentation": null,
            "id": 9747,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9739,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9747,
                  "src": "132:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9738,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "132:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "131:17:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 9741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "156:0:25"
            },
            "scope": 9769,
            "src": "120:69:25",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9767,
              "nodeType": "Block",
              "src": "309:87:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9758,
                    "name": "_fromToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9749,
                    "src": "319:10:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11084",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "id": 9759,
                  "nodeType": "ExpressionStatement",
                  "src": "319:10:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9760,
                    "name": "_toToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9751,
                    "src": "339:8:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11084",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "id": 9761,
                  "nodeType": "ExpressionStatement",
                  "src": "339:8:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9762,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9753,
                    "src": "357:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9763,
                  "nodeType": "ExpressionStatement",
                  "src": "357:7:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 9764,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9737,
                        "src": "382:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 9765,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "381:8:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9757,
                  "id": 9766,
                  "nodeType": "Return",
                  "src": "374:15:25"
                }
              ]
            },
            "documentation": null,
            "id": 9768,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9749,
                  "name": "_fromToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 9768,
                  "src": "214:22:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$11084",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9748,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11084,
                    "src": "214:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11084",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9751,
                  "name": "_toToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 9768,
                  "src": "238:20:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$11084",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9750,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11084,
                    "src": "238:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11084",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9753,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9768,
                  "src": "260:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "213:63:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 9757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9756,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9768,
                  "src": "300:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9755,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "300:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "299:9:25"
            },
            "scope": 9769,
            "src": "195:201:25",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 9898,
        "src": "57:341:25"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 9814,
        "linearizedBaseContracts": [9814],
        "name": "NewBancorConverter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9771,
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 9814,
            "src": "434:22:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9770,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "434:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9773,
            "name": "fee",
            "nodeType": "VariableDeclaration",
            "scope": 9814,
            "src": "462:19:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9772,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "462:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 9788,
              "nodeType": "Block",
              "src": "538:53:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9780,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9771,
                      "src": "548:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9781,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9775,
                      "src": "557:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "548:16:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9783,
                  "nodeType": "ExpressionStatement",
                  "src": "548:16:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9784,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9773,
                      "src": "574:3:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9785,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9777,
                      "src": "580:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "574:10:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9787,
                  "nodeType": "ExpressionStatement",
                  "src": "574:10:25"
                }
              ]
            },
            "documentation": null,
            "id": 9789,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9775,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9789,
                  "src": "500:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9777,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 9789,
                  "src": "517:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "517:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "499:31:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 9779,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "538:0:25"
            },
            "scope": 9814,
            "src": "488:103:25",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9812,
              "nodeType": "Block",
              "src": "720:92:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9802,
                    "name": "_fromToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9791,
                    "src": "730:10:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11084",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "id": 9803,
                  "nodeType": "ExpressionStatement",
                  "src": "730:10:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9804,
                    "name": "_toToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9793,
                    "src": "750:8:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11084",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "id": 9805,
                  "nodeType": "ExpressionStatement",
                  "src": "750:8:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9806,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9795,
                    "src": "768:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9807,
                  "nodeType": "ExpressionStatement",
                  "src": "768:7:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 9808,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9771,
                        "src": "793:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9809,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9773,
                        "src": "801:3:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 9810,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "792:13:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 9801,
                  "id": 9811,
                  "nodeType": "Return",
                  "src": "785:20:25"
                }
              ]
            },
            "documentation": null,
            "id": 9813,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9791,
                  "name": "_fromToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 9813,
                  "src": "616:22:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$11084",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9790,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11084,
                    "src": "616:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11084",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9793,
                  "name": "_toToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 9813,
                  "src": "640:20:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$11084",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9792,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11084,
                    "src": "640:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11084",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9795,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9813,
                  "src": "662:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "615:63:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 9801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9798,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9813,
                  "src": "702:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "702:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9800,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9813,
                  "src": "711:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9799,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "701:18:25"
            },
            "scope": 9814,
            "src": "597:215:25",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 9898,
        "src": "400:414:25"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9815,
              "name": "BancorNetwork",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1988,
              "src": "846:13:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BancorNetwork_$1988",
                "typeString": "contract BancorNetwork"
              }
            },
            "id": 9816,
            "nodeType": "InheritanceSpecifier",
            "src": "846:13:25"
          }
        ],
        "contractDependencies": [
          1988,
          2027,
          2035,
          2135,
          9769,
          9814,
          11809,
          11959,
          12006,
          12208,
          12224
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 9897,
        "linearizedBaseContracts": [
          9897,
          1988,
          2035,
          2027,
          11959,
          12006,
          11809,
          12224,
          12208,
          2135
        ],
        "name": "TestBancorNetwork",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9818,
            "name": "oldBancorConverter",
            "nodeType": "VariableDeclaration",
            "scope": 9897,
            "src": "866:45:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OldBancorConverter_$9769",
              "typeString": "contract OldBancorConverter"
            },
            "typeName": {
              "contractScope": null,
              "id": 9817,
              "name": "OldBancorConverter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9769,
              "src": "866:18:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OldBancorConverter_$9769",
                "typeString": "contract OldBancorConverter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9820,
            "name": "newBancorConverter",
            "nodeType": "VariableDeclaration",
            "scope": 9897,
            "src": "917:45:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NewBancorConverter_$9814",
              "typeString": "contract NewBancorConverter"
            },
            "typeName": {
              "contractScope": null,
              "id": 9819,
              "name": "NewBancorConverter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9814,
              "src": "917:18:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NewBancorConverter_$9814",
                "typeString": "contract NewBancorConverter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 9849,
              "nodeType": "Block",
              "src": "1064:137:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9834,
                      "name": "oldBancorConverter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9818,
                      "src": "1074:18:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OldBancorConverter_$9769",
                        "typeString": "contract OldBancorConverter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 9837,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9822,
                          "src": "1118:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1095:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$returns$_t_contract$_OldBancorConverter_$9769_$",
                          "typeString": "function (uint256) returns (contract OldBancorConverter)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 9835,
                          "name": "OldBancorConverter",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 9769,
                          "src": "1099:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OldBancorConverter_$9769",
                            "typeString": "contract OldBancorConverter"
                          }
                        }
                      },
                      "id": 9838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1095:31:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OldBancorConverter_$9769",
                        "typeString": "contract OldBancorConverter"
                      }
                    },
                    "src": "1074:52:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OldBancorConverter_$9769",
                      "typeString": "contract OldBancorConverter"
                    }
                  },
                  "id": 9840,
                  "nodeType": "ExpressionStatement",
                  "src": "1074:52:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9841,
                      "name": "newBancorConverter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9820,
                      "src": "1136:18:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NewBancorConverter_$9814",
                        "typeString": "contract NewBancorConverter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 9844,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9822,
                          "src": "1180:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9845,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9824,
                          "src": "1189:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1157:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint256_$returns$_t_contract$_NewBancorConverter_$9814_$",
                          "typeString": "function (uint256,uint256) returns (contract NewBancorConverter)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 9842,
                          "name": "NewBancorConverter",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 9814,
                          "src": "1161:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NewBancorConverter_$9814",
                            "typeString": "contract NewBancorConverter"
                          }
                        }
                      },
                      "id": 9846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1157:37:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NewBancorConverter_$9814",
                        "typeString": "contract NewBancorConverter"
                      }
                    },
                    "src": "1136:58:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NewBancorConverter_$9814",
                      "typeString": "contract NewBancorConverter"
                    }
                  },
                  "id": 9848,
                  "nodeType": "ExpressionStatement",
                  "src": "1136:58:25"
                }
              ]
            },
            "documentation": null,
            "id": 9850,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 9829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1059:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 9828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1051:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 9830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1051:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9827,
                      "name": "IContractRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12191,
                      "src": "1033:17:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IContractRegistry_$12191_$",
                        "typeString": "type(contract IContractRegistry)"
                      }
                    },
                    "id": 9831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1033:29:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IContractRegistry_$12191",
                      "typeString": "contract IContractRegistry"
                    }
                  }
                ],
                "id": 9832,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9826,
                  "name": "BancorNetwork",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1988,
                  "src": "1019:13:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BancorNetwork_$1988_$",
                    "typeString": "type(contract BancorNetwork)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1019:44:25"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9822,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9850,
                  "src": "981:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9821,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "981:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9824,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 9850,
                  "src": "998:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "980:31:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 9833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1064:0:25"
            },
            "scope": 9897,
            "src": "969:232:25",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9872,
              "nodeType": "Block",
              "src": "1272:106:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9859,
                            "name": "oldBancorConverter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9818,
                            "src": "1307:18:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OldBancorConverter_$9769",
                              "typeString": "contract OldBancorConverter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OldBancorConverter_$9769",
                              "typeString": "contract OldBancorConverter"
                            }
                          ],
                          "id": 9858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1299:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 9860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1299:27:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 9862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1340:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 9861,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11084,
                          "src": "1328:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$11084_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 9863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1328:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$11084",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 9865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1356:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 9864,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11084,
                          "src": "1344:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$11084_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 9866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1344:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$11084",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 9868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1368:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 9867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1360:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
                        "id": 9869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1360:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$11084",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$11084",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9857,
                      "name": "getReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1282,
                      "src": "1289:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 9870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1289:82:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 9856,
                  "id": 9871,
                  "nodeType": "Return",
                  "src": "1282:89:25"
                }
              ]
            },
            "documentation": null,
            "id": 9873,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReturnOld",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1228:2:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 9856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9853,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9873,
                  "src": "1254:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1254:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9855,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9873,
                  "src": "1263:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1253:18:25"
            },
            "scope": 9897,
            "src": "1207:171:25",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9895,
              "nodeType": "Block",
              "src": "1449:106:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9882,
                            "name": "newBancorConverter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9820,
                            "src": "1484:18:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NewBancorConverter_$9814",
                              "typeString": "contract NewBancorConverter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NewBancorConverter_$9814",
                              "typeString": "contract NewBancorConverter"
                            }
                          ],
                          "id": 9881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1476:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 9883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1476:27:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 9885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1517:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 9884,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11084,
                          "src": "1505:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$11084_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 9886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1505:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$11084",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 9888,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1533:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 9887,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11084,
                          "src": "1521:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$11084_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 9889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1521:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$11084",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 9891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1545:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 9890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1537:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
                        "id": 9892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1537:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$11084",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$11084",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9880,
                      "name": "getReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1282,
                      "src": "1466:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 9893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1466:82:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 9879,
                  "id": 9894,
                  "nodeType": "Return",
                  "src": "1459:89:25"
                }
              ]
            },
            "documentation": null,
            "id": 9896,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReturnNew",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1405:2:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 9879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9876,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9896,
                  "src": "1431:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1431:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9878,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9896,
                  "src": "1440:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9877,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1440:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1430:18:25"
            },
            "scope": 9897,
            "src": "1384:171:25",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 9898,
        "src": "816:741:25"
      }
    ],
    "src": "0:1558:25"
  },
  "legacyAST": {
    "absolutePath": "/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/helpers/TestBancorNetwork.sol",
    "exportedSymbols": {
      "NewBancorConverter": [9814],
      "OldBancorConverter": [9769],
      "TestBancorNetwork": [9897]
    },
    "id": 9898,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9734,
        "literals": ["solidity", "^", "0.4", ".24"],
        "nodeType": "PragmaDirective",
        "src": "0:24:25"
      },
      {
        "absolutePath": "/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/BancorNetwork.sol",
        "file": "../BancorNetwork.sol",
        "id": 9735,
        "nodeType": "ImportDirective",
        "scope": 9898,
        "sourceUnit": 1989,
        "src": "25:30:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 9769,
        "linearizedBaseContracts": [9769],
        "name": "OldBancorConverter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9737,
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 9769,
            "src": "91:22:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9736,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "91:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 9746,
              "nodeType": "Block",
              "src": "156:33:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9742,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9737,
                      "src": "166:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9743,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9739,
                      "src": "175:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "166:16:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9745,
                  "nodeType": "ExpressionStatement",
                  "src": "166:16:25"
                }
              ]
            },
            "documentation": null,
            "id": 9747,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9739,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9747,
                  "src": "132:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9738,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "132:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "131:17:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 9741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "156:0:25"
            },
            "scope": 9769,
            "src": "120:69:25",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9767,
              "nodeType": "Block",
              "src": "309:87:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9758,
                    "name": "_fromToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9749,
                    "src": "319:10:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11084",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "id": 9759,
                  "nodeType": "ExpressionStatement",
                  "src": "319:10:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9760,
                    "name": "_toToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9751,
                    "src": "339:8:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11084",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "id": 9761,
                  "nodeType": "ExpressionStatement",
                  "src": "339:8:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9762,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9753,
                    "src": "357:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9763,
                  "nodeType": "ExpressionStatement",
                  "src": "357:7:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 9764,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9737,
                        "src": "382:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 9765,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "381:8:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9757,
                  "id": 9766,
                  "nodeType": "Return",
                  "src": "374:15:25"
                }
              ]
            },
            "documentation": null,
            "id": 9768,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9749,
                  "name": "_fromToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 9768,
                  "src": "214:22:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$11084",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9748,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11084,
                    "src": "214:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11084",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9751,
                  "name": "_toToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 9768,
                  "src": "238:20:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$11084",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9750,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11084,
                    "src": "238:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11084",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9753,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9768,
                  "src": "260:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "213:63:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 9757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9756,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9768,
                  "src": "300:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9755,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "300:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "299:9:25"
            },
            "scope": 9769,
            "src": "195:201:25",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 9898,
        "src": "57:341:25"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 9814,
        "linearizedBaseContracts": [9814],
        "name": "NewBancorConverter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9771,
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 9814,
            "src": "434:22:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9770,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "434:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9773,
            "name": "fee",
            "nodeType": "VariableDeclaration",
            "scope": 9814,
            "src": "462:19:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9772,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "462:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 9788,
              "nodeType": "Block",
              "src": "538:53:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9780,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9771,
                      "src": "548:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9781,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9775,
                      "src": "557:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "548:16:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9783,
                  "nodeType": "ExpressionStatement",
                  "src": "548:16:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9784,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9773,
                      "src": "574:3:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9785,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9777,
                      "src": "580:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "574:10:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9787,
                  "nodeType": "ExpressionStatement",
                  "src": "574:10:25"
                }
              ]
            },
            "documentation": null,
            "id": 9789,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9775,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9789,
                  "src": "500:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9777,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 9789,
                  "src": "517:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "517:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "499:31:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 9779,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "538:0:25"
            },
            "scope": 9814,
            "src": "488:103:25",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9812,
              "nodeType": "Block",
              "src": "720:92:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9802,
                    "name": "_fromToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9791,
                    "src": "730:10:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11084",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "id": 9803,
                  "nodeType": "ExpressionStatement",
                  "src": "730:10:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9804,
                    "name": "_toToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9793,
                    "src": "750:8:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11084",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "id": 9805,
                  "nodeType": "ExpressionStatement",
                  "src": "750:8:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9806,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9795,
                    "src": "768:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9807,
                  "nodeType": "ExpressionStatement",
                  "src": "768:7:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 9808,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9771,
                        "src": "793:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9809,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9773,
                        "src": "801:3:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 9810,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "792:13:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 9801,
                  "id": 9811,
                  "nodeType": "Return",
                  "src": "785:20:25"
                }
              ]
            },
            "documentation": null,
            "id": 9813,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9791,
                  "name": "_fromToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 9813,
                  "src": "616:22:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$11084",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9790,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11084,
                    "src": "616:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11084",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9793,
                  "name": "_toToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 9813,
                  "src": "640:20:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$11084",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9792,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11084,
                    "src": "640:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$11084",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9795,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9813,
                  "src": "662:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "615:63:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 9801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9798,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9813,
                  "src": "702:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "702:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9800,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9813,
                  "src": "711:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9799,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "701:18:25"
            },
            "scope": 9814,
            "src": "597:215:25",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 9898,
        "src": "400:414:25"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9815,
              "name": "BancorNetwork",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1988,
              "src": "846:13:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BancorNetwork_$1988",
                "typeString": "contract BancorNetwork"
              }
            },
            "id": 9816,
            "nodeType": "InheritanceSpecifier",
            "src": "846:13:25"
          }
        ],
        "contractDependencies": [
          1988,
          2027,
          2035,
          2135,
          9769,
          9814,
          11809,
          11959,
          12006,
          12208,
          12224
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 9897,
        "linearizedBaseContracts": [
          9897,
          1988,
          2035,
          2027,
          11959,
          12006,
          11809,
          12224,
          12208,
          2135
        ],
        "name": "TestBancorNetwork",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9818,
            "name": "oldBancorConverter",
            "nodeType": "VariableDeclaration",
            "scope": 9897,
            "src": "866:45:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OldBancorConverter_$9769",
              "typeString": "contract OldBancorConverter"
            },
            "typeName": {
              "contractScope": null,
              "id": 9817,
              "name": "OldBancorConverter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9769,
              "src": "866:18:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OldBancorConverter_$9769",
                "typeString": "contract OldBancorConverter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9820,
            "name": "newBancorConverter",
            "nodeType": "VariableDeclaration",
            "scope": 9897,
            "src": "917:45:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NewBancorConverter_$9814",
              "typeString": "contract NewBancorConverter"
            },
            "typeName": {
              "contractScope": null,
              "id": 9819,
              "name": "NewBancorConverter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9814,
              "src": "917:18:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NewBancorConverter_$9814",
                "typeString": "contract NewBancorConverter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 9849,
              "nodeType": "Block",
              "src": "1064:137:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9834,
                      "name": "oldBancorConverter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9818,
                      "src": "1074:18:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OldBancorConverter_$9769",
                        "typeString": "contract OldBancorConverter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 9837,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9822,
                          "src": "1118:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1095:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$returns$_t_contract$_OldBancorConverter_$9769_$",
                          "typeString": "function (uint256) returns (contract OldBancorConverter)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 9835,
                          "name": "OldBancorConverter",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 9769,
                          "src": "1099:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OldBancorConverter_$9769",
                            "typeString": "contract OldBancorConverter"
                          }
                        }
                      },
                      "id": 9838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1095:31:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OldBancorConverter_$9769",
                        "typeString": "contract OldBancorConverter"
                      }
                    },
                    "src": "1074:52:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OldBancorConverter_$9769",
                      "typeString": "contract OldBancorConverter"
                    }
                  },
                  "id": 9840,
                  "nodeType": "ExpressionStatement",
                  "src": "1074:52:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9841,
                      "name": "newBancorConverter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9820,
                      "src": "1136:18:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NewBancorConverter_$9814",
                        "typeString": "contract NewBancorConverter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 9844,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9822,
                          "src": "1180:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9845,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9824,
                          "src": "1189:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1157:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint256_$returns$_t_contract$_NewBancorConverter_$9814_$",
                          "typeString": "function (uint256,uint256) returns (contract NewBancorConverter)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 9842,
                          "name": "NewBancorConverter",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 9814,
                          "src": "1161:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NewBancorConverter_$9814",
                            "typeString": "contract NewBancorConverter"
                          }
                        }
                      },
                      "id": 9846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1157:37:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NewBancorConverter_$9814",
                        "typeString": "contract NewBancorConverter"
                      }
                    },
                    "src": "1136:58:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NewBancorConverter_$9814",
                      "typeString": "contract NewBancorConverter"
                    }
                  },
                  "id": 9848,
                  "nodeType": "ExpressionStatement",
                  "src": "1136:58:25"
                }
              ]
            },
            "documentation": null,
            "id": 9850,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 9829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1059:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 9828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1051:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 9830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1051:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9827,
                      "name": "IContractRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12191,
                      "src": "1033:17:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IContractRegistry_$12191_$",
                        "typeString": "type(contract IContractRegistry)"
                      }
                    },
                    "id": 9831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1033:29:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IContractRegistry_$12191",
                      "typeString": "contract IContractRegistry"
                    }
                  }
                ],
                "id": 9832,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9826,
                  "name": "BancorNetwork",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1988,
                  "src": "1019:13:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BancorNetwork_$1988_$",
                    "typeString": "type(contract BancorNetwork)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1019:44:25"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9822,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9850,
                  "src": "981:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9821,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "981:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9824,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 9850,
                  "src": "998:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "980:31:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 9833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1064:0:25"
            },
            "scope": 9897,
            "src": "969:232:25",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9872,
              "nodeType": "Block",
              "src": "1272:106:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9859,
                            "name": "oldBancorConverter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9818,
                            "src": "1307:18:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OldBancorConverter_$9769",
                              "typeString": "contract OldBancorConverter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OldBancorConverter_$9769",
                              "typeString": "contract OldBancorConverter"
                            }
                          ],
                          "id": 9858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1299:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 9860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1299:27:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 9862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1340:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 9861,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11084,
                          "src": "1328:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$11084_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 9863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1328:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$11084",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 9865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1356:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 9864,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11084,
                          "src": "1344:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$11084_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 9866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1344:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$11084",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 9868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1368:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 9867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1360:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
                        "id": 9869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1360:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$11084",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$11084",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9857,
                      "name": "getReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1282,
                      "src": "1289:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 9870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1289:82:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 9856,
                  "id": 9871,
                  "nodeType": "Return",
                  "src": "1282:89:25"
                }
              ]
            },
            "documentation": null,
            "id": 9873,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReturnOld",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1228:2:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 9856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9853,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9873,
                  "src": "1254:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1254:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9855,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9873,
                  "src": "1263:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1253:18:25"
            },
            "scope": 9897,
            "src": "1207:171:25",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9895,
              "nodeType": "Block",
              "src": "1449:106:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9882,
                            "name": "newBancorConverter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9820,
                            "src": "1484:18:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NewBancorConverter_$9814",
                              "typeString": "contract NewBancorConverter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NewBancorConverter_$9814",
                              "typeString": "contract NewBancorConverter"
                            }
                          ],
                          "id": 9881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1476:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 9883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1476:27:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 9885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1517:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 9884,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11084,
                          "src": "1505:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$11084_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 9886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1505:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$11084",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 9888,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1533:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 9887,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11084,
                          "src": "1521:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$11084_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 9889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1521:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$11084",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 9891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1545:1:25",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 9890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1537:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
                        "id": 9892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1537:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$11084",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$11084",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9880,
                      "name": "getReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1282,
                      "src": "1466:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 9893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1466:82:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 9879,
                  "id": 9894,
                  "nodeType": "Return",
                  "src": "1459:89:25"
                }
              ]
            },
            "documentation": null,
            "id": 9896,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReturnNew",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1405:2:25"
            },
            "payable": false,
            "returnParameters": {
              "id": 9879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9876,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9896,
                  "src": "1431:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1431:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9878,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9896,
                  "src": "1440:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9877,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1440:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1430:18:25"
            },
            "scope": 9897,
            "src": "1384:171:25",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 9898,
        "src": "816:741:25"
      }
    ],
    "src": "0:1558:25"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-12-04T00:14:08.323Z",
  "devdoc": {
    "methods": {
      "acceptOwnership()": {
        "details": "used by a new owner to accept an ownership transfer"
      },
      "claimAndConvert(address[],uint256,uint256)": {
        "details": "claims the caller's tokens, converts them to any other token in the bancor network by following a predefined conversion path and transfers the result tokens back to the sender note that allowance must be set beforehand",
        "params": {
          "_amount": "amount to convert from (in the initial source token)",
          "_minReturn": "if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero",
          "_path": "conversion path, see conversion path format above"
        },
        "return": "tokens issued in return"
      },
      "claimAndConvertFor(address[],uint256,uint256,address)": {
        "details": "claims the caller's tokens, converts them to any other token in the bancor network by following a predefined conversion path and transfers the result tokens to a target account note that allowance must be set beforehand",
        "params": {
          "_amount": "amount to convert from (in the initial source token)",
          "_for": "account that will receive the conversion result",
          "_minReturn": "if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero",
          "_path": "conversion path, see conversion path format above"
        },
        "return": "tokens issued in return"
      },
      "convert(address[],uint256,uint256)": {
        "details": "converts the token to any other token in the bancor network by following a predefined conversion path and transfers the result tokens back to the sender note that the converter should already own the source tokens",
        "params": {
          "_amount": "amount to convert from (in the initial source token)",
          "_minReturn": "if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero",
          "_path": "conversion path, see conversion path format above"
        },
        "return": "tokens issued in return"
      },
      "convertFor(address[],uint256,uint256,address)": {
        "details": "converts the token to any other token in the bancor network by following a predefined conversion path and transfers the result tokens to a target account note that the converter should already own the source tokens",
        "params": {
          "_amount": "amount to convert from (in the initial source token)",
          "_for": "account that will receive the conversion result",
          "_minReturn": "if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero",
          "_path": "conversion path, see conversion path format above"
        },
        "return": "tokens issued in return"
      },
      "convertForPrioritized3(address[],uint256,uint256,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "converts the token to any other token in the bancor network by following a predefined conversion path and transfers the result tokens to a target account. this version of the function also allows the verified signer to bypass the universal gas price limit. note that the converter should already own the source tokens",
        "params": {
          "_amount": "amount to convert from (in the initial source token)",
          "_block": "if the current block exceeded the given parameter - it is cancelled",
          "_customVal": "custom value that was signed for prioritized conversion",
          "_for": "account that will receive the conversion result",
          "_minReturn": "if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero",
          "_path": "conversion path, see conversion path format above",
          "_r": "(signature[0:64]) associated with the signer address and helps to validate if the signature is legit",
          "_s": "(signature[64:128]) associated with the signer address and helps to validate if the signature is legit",
          "_v": "(signature[128:130]) associated with the signer address and helps to validate if the signature is legit"
        },
        "return": "tokens issued in return"
      },
      "getReturnByPath(address[],uint256)": {
        "details": "returns the expected return amount for converting a specific amount by following a given conversion path. notice that there is no support for circular paths.",
        "params": {
          "_amount": "amount to convert from (in the initial source token)",
          "_path": "conversion path, see conversion path format above"
        },
        "return": "expected conversion return amount and conversion fee"
      },
      "registerEtherToken(address,bool)": {
        "details": "allows the owner to register/unregister ether tokens",
        "params": {
          "_register": "true to register, false to unregister",
          "_token": "ether token contract address"
        }
      },
      "transferOwnership(address)": {
        "details": "allows transferring the contract ownership the new owner still needs to accept the transfer can only be called by the contract owner",
        "params": {
          "_newOwner": "new contract owner"
        }
      },
      "withdrawTokens(address,address,uint256)": {
        "details": "withdraws tokens held by the contract and sends them to an account can only be called by the owner",
        "params": {
          "_amount": "amount to withdraw",
          "_to": "account to receive the new amount",
          "_token": "ERC20 token contract address"
        }
      },
      "xConvert(address[],uint256,uint256,bytes32,bytes32,uint256)": {
        "details": "converts any other token to BNT in the bancor network by following a predefined conversion path and transfers the resulting tokens to BancorX. note that the network should already have been given allowance of the source token (if not ETH)",
        "params": {
          "_amount": "amount to convert from (in the initial source token)",
          "_conversionId": "pre-determined unique (if non zero) id which refers to this transaction ",
          "_minReturn": "if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero",
          "_path": "conversion path, see conversion path format above",
          "_to": "address/account on _toBlockchain to send the BNT to",
          "_toBlockchain": "blockchain BNT will be issued on"
        },
        "return": "the amount of BNT received from this conversion"
      },
      "xConvertPrioritized(address[],uint256,uint256,bytes32,bytes32,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "converts any other token to BNT in the bancor network by following a predefined conversion path and transfers the resulting tokens to BancorX. this version of the function also allows the verified signer to bypass the universal gas price limit. note that the network should already have been given allowance of the source token (if not ETH)",
        "params": {
          "_amount": "amount to convert from (in the initial source token)",
          "_block": "if the current block exceeded the given parameter - it is cancelled",
          "_conversionId": "pre-determined unique (if non zero) id which refers to this transaction ",
          "_minReturn": "if the conversion results in an amount smaller than the minimum return - it is cancelled, must be nonzero",
          "_path": "conversion path, see conversion path format above",
          "_r": "(signature[0:64]) associated with the signer address and helps to validate if the signature is legit",
          "_s": "(signature[64:128]) associated with the signer address and helps to validate if the signature is legit",
          "_to": "address/account on _toBlockchain to send the BNT to",
          "_toBlockchain": "blockchain BNT will be issued on",
          "_v": "(signature[128:130]) associated with the signer address and helps to validate if the signature is legit"
        },
        "return": "the amount of BNT received from this conversion"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}

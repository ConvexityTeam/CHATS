{
  "contractName": "TestNonStandardERC20Token",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "standard",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_supply",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"allow another account/contract to spend some tokens on your behalf throws on any error rather then return a false flag to minimize user errors also, to minimize the risk of the approve/transferFrom attack vector (see https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/), approve has to be called twice in 2 separate transactions - once to change the allowance to 0 and secondly to change it to the new allowance value\",\"params\":{\"_spender\":\"approved address\",\"_value\":\"allowance amount\"},\"return\":\"true if the approval was successful, false if it wasn't\"},\"transfer(address,uint256)\":{\"details\":\"send coins throws on any error rather then return a false flag to minimize user errors\",\"params\":{\"_to\":\"target address\",\"_value\":\"transfer amount\"},\"return\":\"true if the transfer was successful, false if it wasn't\"},\"transferFrom(address,address,uint256)\":{\"details\":\"an account/contract attempts to get the coins throws on any error rather then return a false flag to minimize user errors\",\"params\":{\"_from\":\"source address\",\"_to\":\"target address\",\"_value\":\"transfer amount\"},\"return\":\"true if the transfer was successful, false if it wasn't\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/helpers/TestNonStandardERC20Token.sol\":\"TestNonStandardERC20Token\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/helpers/NonStandardERC20Token.sol\":{\"keccak256\":\"0xe7bc6f7931e5c512f39a2c8b9cd657be04a210e555eee751bf00fe5c87609d5d\",\"urls\":[\"bzzr://40bfd278b178cf0d94686327ef61b69b7e1879298977a45795229e1b2b96e46b\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/helpers/TestNonStandardERC20Token.sol\":{\"keccak256\":\"0x28a44203d6e0280f6b69ecc9c8f2ca77185face1c1b057ce918dc32608a70de7\",\"urls\":[\"bzzr://1faefca083025b956d4b0084d4966e77d5666c82d4b756e56e4f9b1d95623ef0\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/token/interfaces/INonStandardERC20.sol\":{\"keccak256\":\"0x26596dd8e564493f7e821102865fb382c21bbedd44ebc920c8d63626f1bf19dc\",\"urls\":[\"bzzr://c750029c9ba7521fbe0c1827a4854a4b8db274d4402e00daaa4683a024c44d93\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/SafeMath.sol\":{\"keccak256\":\"0xcc762e1392acd929f86bc79f2d553fefa6692756d84640d3d4530db81bfdae3a\",\"urls\":[\"bzzr://d78ab9d7e21198a64398840779fce2f9631685aab56066e4dbb0826950f40a35\"]},\"/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/utility/Utils.sol\":{\"keccak256\":\"0x4aaa2acf58cbeaed5f484bdca75daf7caacde07d62ca44b97f020381fc8801e3\",\"urls\":[\"bzzr://feed4fa84f6d4ea9f8e2520e8748cc4e7f8cf2104c8dcdff086db6129fba6f10\"]}},\"version\":1}",
  "bytecode": "0x60c0604052600960808190527f546f6b656e20302e31000000000000000000000000000000000000000000000060a090815261003e9160009190610141565b5060408051602081019182905260009081905261005d91600191610141565b5060408051602081019182905260009081905261007c91600291610141565b506003805460ff19169055600060045534801561009857600080fd5b506040516108d53803806108d5833981016040908152815160208301519183015190830180519093929092019183908390600090811080156100db575060008251115b15156100e657600080fd5b82516100f9906001906020860190610141565b50815161010d906002906020850190610141565b506003805460ff191660ff929092169190911790555050600481905533600090815260056020526040902055506101dc9050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061018257805160ff19168380011785556101af565b828001600101855582156101af579182015b828111156101af578251825591602001919060010190610194565b506101bb9291506101bf565b5090565b6101d991905b808211156101bb57600081556001016101c5565b90565b6106ea806101eb6000396000f3006080604052600436106100a35763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100a8578063095ea7b31461013257806318160ddd1461015857806323b872dd1461017f578063313ce567146101a95780635a3b7e42146101d457806370a08231146101e957806395d89b411461020a578063a9059cbb1461021f578063dd62ed3e14610243575b600080fd5b3480156100b457600080fd5b506100bd61026a565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f75781810151838201526020016100df565b50505050905090810190601f1680156101245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561013e57600080fd5b50610156600160a060020a03600435166024356102f7565b005b34801561016457600080fd5b5061016d6103a9565b60408051918252519081900360200190f35b34801561018b57600080fd5b50610156600160a060020a03600435811690602435166044356103af565b3480156101b557600080fd5b506101be6104e3565b6040805160ff9092168252519081900360200190f35b3480156101e057600080fd5b506100bd6104ec565b3480156101f557600080fd5b5061016d600160a060020a0360043516610547565b34801561021657600080fd5b506100bd610559565b34801561022b57600080fd5b50610156600160a060020a03600435166024356105b1565b34801561024f57600080fd5b5061016d600160a060020a0360043581169060243516610673565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102ef5780601f106102c4576101008083540402835291602001916102ef565b820191906000526020600020905b8154815290600101906020018083116102d257829003601f168201915b505050505081565b81600160a060020a038116151561030d57600080fd5b81158061033b5750336000908152600660209081526040808320600160a060020a0387168452909152902054155b151561034657600080fd5b336000818152600660209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a3505050565b60045481565b82600160a060020a03811615156103c557600080fd5b82600160a060020a03811615156103db57600080fd5b600160a060020a038516600090815260066020908152604080832033845290915290205461040f908463ffffffff61069016565b600160a060020a038616600081815260066020908152604080832033845282528083209490945591815260059091522054610450908463ffffffff61069016565b600160a060020a038087166000908152600560205260408082209390935590861681522054610485908463ffffffff6106a516565b600160a060020a0380861660008181526005602090815260409182902094909455805187815290519193928916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35050505050565b60035460ff1681565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102ef5780601f106102c4576101008083540402835291602001916102ef565b60056020526000908152604090205481565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156102ef5780601f106102c4576101008083540402835291602001916102ef565b81600160a060020a03811615156105c757600080fd5b336000908152600560205260409020546105e7908363ffffffff61069016565b3360009081526005602052604080822092909255600160a060020a03851681522054610619908363ffffffff6106a516565b600160a060020a0384166000818152600560209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505050565b600660209081526000928352604080842090915290825290205481565b60008183101561069f57600080fd5b50900390565b6000828201838110156106b757600080fd5b93925050505600a165627a7a723058206924498599cbd1993347c0cdd3b0b34a05d8a6bca6a6599efbbbafbbf324e8700029",
  "deployedBytecode": "0x6080604052600436106100a35763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100a8578063095ea7b31461013257806318160ddd1461015857806323b872dd1461017f578063313ce567146101a95780635a3b7e42146101d457806370a08231146101e957806395d89b411461020a578063a9059cbb1461021f578063dd62ed3e14610243575b600080fd5b3480156100b457600080fd5b506100bd61026a565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f75781810151838201526020016100df565b50505050905090810190601f1680156101245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561013e57600080fd5b50610156600160a060020a03600435166024356102f7565b005b34801561016457600080fd5b5061016d6103a9565b60408051918252519081900360200190f35b34801561018b57600080fd5b50610156600160a060020a03600435811690602435166044356103af565b3480156101b557600080fd5b506101be6104e3565b6040805160ff9092168252519081900360200190f35b3480156101e057600080fd5b506100bd6104ec565b3480156101f557600080fd5b5061016d600160a060020a0360043516610547565b34801561021657600080fd5b506100bd610559565b34801561022b57600080fd5b50610156600160a060020a03600435166024356105b1565b34801561024f57600080fd5b5061016d600160a060020a0360043581169060243516610673565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102ef5780601f106102c4576101008083540402835291602001916102ef565b820191906000526020600020905b8154815290600101906020018083116102d257829003601f168201915b505050505081565b81600160a060020a038116151561030d57600080fd5b81158061033b5750336000908152600660209081526040808320600160a060020a0387168452909152902054155b151561034657600080fd5b336000818152600660209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a3505050565b60045481565b82600160a060020a03811615156103c557600080fd5b82600160a060020a03811615156103db57600080fd5b600160a060020a038516600090815260066020908152604080832033845290915290205461040f908463ffffffff61069016565b600160a060020a038616600081815260066020908152604080832033845282528083209490945591815260059091522054610450908463ffffffff61069016565b600160a060020a038087166000908152600560205260408082209390935590861681522054610485908463ffffffff6106a516565b600160a060020a0380861660008181526005602090815260409182902094909455805187815290519193928916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35050505050565b60035460ff1681565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102ef5780601f106102c4576101008083540402835291602001916102ef565b60056020526000908152604090205481565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156102ef5780601f106102c4576101008083540402835291602001916102ef565b81600160a060020a03811615156105c757600080fd5b336000908152600560205260409020546105e7908363ffffffff61069016565b3360009081526005602052604080822092909255600160a060020a03851681522054610619908363ffffffff6106a516565b600160a060020a0384166000818152600560209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505050565b600660209081526000928352604080842090915290825290205481565b60008183101561069f57600080fd5b50900390565b6000828201838110156106b757600080fd5b93925050505600a165627a7a723058206924498599cbd1993347c0cdd3b0b34a05d8a6bca6a6599efbbbafbbf324e8700029",
  "sourceMap": "289:36:22:-;108:274:29;289:36:22;;108:274:29;289:36:22;;;;;;;;;;-1:-1:-1;;289:36:22;;:::i;:::-;-1:-1:-1;331:23:22;;;;;;;;;;-1:-1:-1;331:23:22;;;;;;;;;:::i;:::-;-1:-1:-1;360:25:22;;;;;;;;;;-1:-1:-1;360:25:22;;;;;;;;;:::i;:::-;-1:-1:-1;391:25:22;;;-1:-1:-1;;391:25:22;;;415:1;422:30;;174:206:29;5:2:-1;;;;30:1;27;20:12;5:2;174:206:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1019:19:22;;174:206:29;;;;;;;;;;;294:1;;1019:23:22;-1:-1:-1;1019:52:22;;;;;1070:1;1052:7;1046:21;:25;1019:52;1011:61;;;;;;;;1101:12;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;1123:16:22;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;1149:8:22;:20;;-1:-1:-1;;1149:20:22;;;;;;;;;;;;-1:-1:-1;;311:11:29;:21;;;352:10;-1:-1:-1;342:21:29;;;:9;:21;;;;;:31;-1:-1:-1;108:274:29;;-1:-1:-1;108:274:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;108:274:29;;;-1:-1:-1;108:274:29;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "108:274:29:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;331:23:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;331:23:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;331:23:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3131:407;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3131:407:22;-1:-1:-1;;;;;3131:407:22;;;;;;;;;422:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;422:30:22;;;;;;;;;;;;;;;;;;;;2081:380;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2081:380:22;-1:-1:-1;;;;;2081:380:22;;;;;;;;;;;;391:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;391:25:22;;;;;;;;;;;;;;;;;;;;;;;289:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;289:36:22;;;;458:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;458:45:22;-1:-1:-1;;;;;458:45:22;;;;;360:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;360:25:22;;;;1458:267;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1458:267:22;-1:-1:-1;;;;;1458:267:22;;;;;;;509:66;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;509:66:22;-1:-1:-1;;;;;509:66:22;;;;;;;;;;331:23;;;;;;;;;;;;;;;-1:-1:-1;;331:23:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3131:407::-;3218:8;-1:-1:-1;;;;;432:22:48;;;;424:31;;;;;;3375:11:22;;;:51;;-1:-1:-1;3400:10:22;3390:21;;;;:9;:21;;;;;;;;-1:-1:-1;;;;;3390:31:22;;;;;;;;;;:36;3375:51;3367:60;;;;;;;;3448:10;3438:21;;;;:9;:21;;;;;;;;-1:-1:-1;;;;;3438:31:22;;;;;;;;;;;;:40;;;3493:38;;;;;;;3438:31;;3448:10;3493:38;;;;;;;;;;;3131:407;;;:::o;422:30::-;;;;:::o;2081:380::-;2183:5;-1:-1:-1;;;;;432:22:48;;;;424:31;;;;;;2211:3:22;-1:-1:-1;;;;;432:22:48;;;;424:31;;;;;;-1:-1:-1;;;;;2261:16:22;;;;;;:9;:16;;;;;;;;2278:10;2261:28;;;;;;;;:40;;2294:6;2261:40;:32;:40;:::i;:::-;-1:-1:-1;;;;;2230:16:22;;;;;;:9;:16;;;;;;;;2247:10;2230:28;;;;;;;:71;;;;2330:16;;;:9;:16;;;;;:28;;2351:6;2330:28;:20;:28;:::i;:::-;-1:-1:-1;;;;;2311:16:22;;;;;;;:9;:16;;;;;;:47;;;;2385:14;;;;;;;:26;;2404:6;2385:26;:18;:26;:::i;:::-;-1:-1:-1;;;;;2368:14:22;;;;;;;:9;:14;;;;;;;;;:43;;;;2426:28;;;;;;;2368:14;;2426:28;;;;;;;;;;;;;465:1:48;2081:380:22;;;;:::o;391:25::-;;;;;;:::o;289:36::-;;;;;;;;;;;;;;;-1:-1:-1;;289:36:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;458:45;;;;;;;;;;;;;:::o;360:25::-;;;;;;;;;;;;;;-1:-1:-1;;360:25:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1458:267;1541:3;-1:-1:-1;;;;;432:22:48;;;;424:31;;;;;;1594:10:22;1584:21;;;;:9;:21;;;;;;:33;;1610:6;1584:33;:25;:33;:::i;:::-;1570:10;1560:21;;;;:9;:21;;;;;;:57;;;;-1:-1:-1;;;;;1644:14:22;;;;;;:26;;1663:6;1644:26;:18;:26;:::i;:::-;-1:-1:-1;;;;;1627:14:22;;;;;;:9;:14;;;;;;;;;:43;;;;1685:33;;;;;;;1627:14;;1694:10;;1685:33;;;;;;;;;;1458:267;;;:::o;509:66::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;649:127:46:-;709:7;736:8;;;;728:17;;;;;;-1:-1:-1;762:7:46;;;649:127::o;301:149::-;361:7;392;;;417;;;;409:16;;;;;;442:1;301:149;-1:-1:-1;;;301:149:46:o",
  "source": "pragma solidity ^0.4.24;\nimport './NonStandardERC20Token.sol';\n\n/*\n    Test token with predefined supply\n*/\ncontract TestNonStandardERC20Token is NonStandardERC20Token {\n    constructor(string _name, string _symbol, uint256 _supply)\n        public\n        NonStandardERC20Token(_name, _symbol, 0)\n    {\n        totalSupply = _supply;\n        balanceOf[msg.sender] = _supply;\n    }\n}\n",
  "sourcePath": "/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/helpers/TestNonStandardERC20Token.sol",
  "ast": {
    "absolutePath": "/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/helpers/TestNonStandardERC20Token.sol",
    "exportedSymbols": {
      "TestNonStandardERC20Token": [10052]
    },
    "id": 10053,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10022,
        "literals": ["solidity", "^", "0.4", ".24"],
        "nodeType": "PragmaDirective",
        "src": "0:24:29"
      },
      {
        "absolutePath": "/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/helpers/NonStandardERC20Token.sol",
        "file": "./NonStandardERC20Token.sol",
        "id": 10023,
        "nodeType": "ImportDirective",
        "scope": 10053,
        "sourceUnit": 9414,
        "src": "25:37:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10024,
              "name": "NonStandardERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9413,
              "src": "146:21:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NonStandardERC20Token_$9413",
                "typeString": "contract NonStandardERC20Token"
              }
            },
            "id": 10025,
            "nodeType": "InheritanceSpecifier",
            "src": "146:21:29"
          }
        ],
        "contractDependencies": [9413, 11182, 12006],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 10052,
        "linearizedBaseContracts": [10052, 9413, 12006, 11182],
        "name": "TestNonStandardERC20Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10050,
              "nodeType": "Block",
              "src": "301:79:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10039,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [9203],
                      "referencedDeclaration": 9203,
                      "src": "311:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10040,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10031,
                      "src": "325:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "311:21:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10042,
                  "nodeType": "ExpressionStatement",
                  "src": "311:21:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 10043,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [9207],
                        "referencedDeclaration": 9207,
                        "src": "342:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 10046,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10044,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12249,
                          "src": "352:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "352:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "342:21:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10047,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10031,
                      "src": "366:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "342:31:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10049,
                  "nodeType": "ExpressionStatement",
                  "src": "342:31:29"
                }
              ]
            },
            "documentation": null,
            "id": 10051,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 10034,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10027,
                    "src": "278:5:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 10035,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10029,
                    "src": "285:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 10036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "294:1:29",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  }
                ],
                "id": 10037,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10033,
                  "name": "NonStandardERC20Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9413,
                  "src": "256:21:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_NonStandardERC20Token_$9413_$",
                    "typeString": "type(contract NonStandardERC20Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "256:40:29"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10027,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 10051,
                  "src": "186:12:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10026,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "186:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10029,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 10051,
                  "src": "200:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10028,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "200:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10031,
                  "name": "_supply",
                  "nodeType": "VariableDeclaration",
                  "scope": 10051,
                  "src": "216:15:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "216:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "185:47:29"
            },
            "payable": false,
            "returnParameters": {
              "id": 10038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "301:0:29"
            },
            "scope": 10052,
            "src": "174:206:29",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 10053,
        "src": "108:274:29"
      }
    ],
    "src": "0:383:29"
  },
  "legacyAST": {
    "absolutePath": "/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/helpers/TestNonStandardERC20Token.sol",
    "exportedSymbols": {
      "TestNonStandardERC20Token": [10052]
    },
    "id": 10053,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10022,
        "literals": ["solidity", "^", "0.4", ".24"],
        "nodeType": "PragmaDirective",
        "src": "0:24:29"
      },
      {
        "absolutePath": "/Users/Nick/WebstormProjects/BancorOriginal/solidity/contracts/helpers/NonStandardERC20Token.sol",
        "file": "./NonStandardERC20Token.sol",
        "id": 10023,
        "nodeType": "ImportDirective",
        "scope": 10053,
        "sourceUnit": 9414,
        "src": "25:37:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10024,
              "name": "NonStandardERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9413,
              "src": "146:21:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NonStandardERC20Token_$9413",
                "typeString": "contract NonStandardERC20Token"
              }
            },
            "id": 10025,
            "nodeType": "InheritanceSpecifier",
            "src": "146:21:29"
          }
        ],
        "contractDependencies": [9413, 11182, 12006],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 10052,
        "linearizedBaseContracts": [10052, 9413, 12006, 11182],
        "name": "TestNonStandardERC20Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10050,
              "nodeType": "Block",
              "src": "301:79:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10039,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [9203],
                      "referencedDeclaration": 9203,
                      "src": "311:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10040,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10031,
                      "src": "325:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "311:21:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10042,
                  "nodeType": "ExpressionStatement",
                  "src": "311:21:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 10043,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [9207],
                        "referencedDeclaration": 9207,
                        "src": "342:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 10046,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10044,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12249,
                          "src": "352:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "352:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "342:21:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10047,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10031,
                      "src": "366:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "342:31:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10049,
                  "nodeType": "ExpressionStatement",
                  "src": "342:31:29"
                }
              ]
            },
            "documentation": null,
            "id": 10051,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 10034,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10027,
                    "src": "278:5:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 10035,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10029,
                    "src": "285:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 10036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "294:1:29",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  }
                ],
                "id": 10037,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10033,
                  "name": "NonStandardERC20Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9413,
                  "src": "256:21:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_NonStandardERC20Token_$9413_$",
                    "typeString": "type(contract NonStandardERC20Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "256:40:29"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10027,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 10051,
                  "src": "186:12:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10026,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "186:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10029,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 10051,
                  "src": "200:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10028,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "200:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10031,
                  "name": "_supply",
                  "nodeType": "VariableDeclaration",
                  "scope": 10051,
                  "src": "216:15:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "216:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "185:47:29"
            },
            "payable": false,
            "returnParameters": {
              "id": 10038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "301:0:29"
            },
            "scope": 10052,
            "src": "174:206:29",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 10053,
        "src": "108:274:29"
      }
    ],
    "src": "0:383:29"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-12-04T00:14:08.334Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "allow another account/contract to spend some tokens on your behalf throws on any error rather then return a false flag to minimize user errors also, to minimize the risk of the approve/transferFrom attack vector (see https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/), approve has to be called twice in 2 separate transactions - once to change the allowance to 0 and secondly to change it to the new allowance value",
        "params": {
          "_spender": "approved address",
          "_value": "allowance amount"
        },
        "return": "true if the approval was successful, false if it wasn't"
      },
      "transfer(address,uint256)": {
        "details": "send coins throws on any error rather then return a false flag to minimize user errors",
        "params": {
          "_to": "target address",
          "_value": "transfer amount"
        },
        "return": "true if the transfer was successful, false if it wasn't"
      },
      "transferFrom(address,address,uint256)": {
        "details": "an account/contract attempts to get the coins throws on any error rather then return a false flag to minimize user errors",
        "params": {
          "_from": "source address",
          "_to": "target address",
          "_value": "transfer amount"
        },
        "return": "true if the transfer was successful, false if it wasn't"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}
